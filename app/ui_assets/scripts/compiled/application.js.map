{"version":3,"sources":["../src/application.js"],"names":["notify","text","type","notify_Block","document","createElement","classList","add","style","display","innerHTML","body","appendChild","setTimeout","remove","app","validate","__read_DB","isAuth_Data","length","Logged","querySelector","Name","JSON","parse","Avatar","folder","Render","window","location","Quit","__update_DB","Id","isLogged_Out","folder_block","folder_Block_List","folder_Modal_Btn","folder_Submit_Btn","group_label","task_Modal_Btn","folders_Data","Set","isFolder_Rendered","click","task_List","todo_List","notes_List","todo_Block","notes_Block","today_Date","parseToday","Date","setAttribute","data","console","log","filtered_Data","filter","value","index","arr","Type","parsedDate","entries","a","isListExist","Group","list","parseDate","Folder","title","textContent","Add","group_Input","folder_Input","getAttribute","toLowerCase","trim","isFolder_Exists","__add_Item_DB","isAdded","clear_Modal","isUpdated","Clicked","e","$this","target","nodeName","data_Group","parentElement","data_Folder","all_Folder_Items","querySelectorAll","task","className","data_Name","children","Remove","$this_value","groupName","folderName","conf","confirm","__remove_Item_DB","isRemove_Done","addEventListener","folder_Modal_Trigger","toggle_label_Input","overlay_clicked","esc_trigger","close_Modal_Trigger","focus","submit_Folder_Form_OnEnter","keyCode","all_Label_Span","Task_block","task_Submit_Btn","group","tasks_Data","Task","undefined","isTask_Rendered","task_block","today","timeScheduler","Timeline","startDate","endDate","timeLine","Repeat","task_Folder","task_Group","task_Input","startDate_Input","endDate_Input","isExist","task_Completed_Checkbox","checked","parseInt","task_Id","task_Items","todo","notes","$this_value_txt","$this_value_start","$this_value_end","$this_Status","id","name","isDeleted","task_Modal_Trigger","submit_Task_Form_OnEnter","currentDate","getFullYear","getMonth","toString","getDate","start","end","today_Arr","split","start_Arr","end_Arr","chrome","runtime","sendMessage","todo_Input","todo_Clear_Btn","todo_Data","Todo","todo_Data_Parsed","ongoing_Tasks","completed_Task","Status","Data","todo_Items","collect_Todo_Items","todo_Items_Data","elem_Parent","current_ongoing_count","current_complete_count","RemoveCompletedTodo","todo_Clear_Promise","then","response","catch","error","todo_Input_Submit","items","push","li_Node","insertBefore","childNodes","Promise","resolve","reject","completed_Count","notes_Add_Input","notes_Remove","notes_Data","Notes","notes_Data_Parsed","search","txt_arr","map","join","collect_Notes_Items","isNote_Exists","isNote_Updated","RemoveAll","isRemoved","notes_Items_Data","notes_Items","log_Out_Btn","date","months","days","week","getDay","day","month","commands","onCommand","addListener","command"],"mappings":";;;;;;AAAA;;;;;;;;AAQA;AACA,SAASA,MAAT,CAAgBC,IAAhB,EAAsBC,IAAtB,EAA4B;AAC1B,MAAMC,eAAeC,SAASC,aAAT,CAAuB,KAAvB,CAArB;AACAF,eAAaG,SAAb,CAAuBC,GAAvB,CAA2B,cAA3B;AACAJ,eAAaK,KAAb,CAAmBC,OAAnB,GAA6B,OAA7B;AACAN,eAAaO,SAAb,mBAAsCR,IAAtC,WAA+CD,IAA/C;AACAG,WAASO,IAAT,CAAcC,WAAd,CAA0BT,YAA1B;;AAEAU,aAAW,YAAM;AACfV,iBAAaW,MAAb;AACD,GAFD,EAEG,IAFH;AAGD;;AAID,CAAC,YAAW;AACV;;;AAGA;;AAJU;;AAMV,MAAMC,MAAM;AACVC;AAAA,yEAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACeC,UAAU,MAAV,CADf;;AAAA;AACLC,2BADK;;;AAGT,oBAAIA,YAAYC,MAAhB,EAAwB;AACtB,sBAAID,YAAY,CAAZ,EAAeE,MAAnB,EAA2B;AACzBhB,6BAASiB,aAAT,CAAuB,cAAvB,EAAuCX,SAAvC,2DACoCQ,YAAY,CAAZ,EAAeI,IADnD,2CAEYC,KAAKC,KAAL,CAAWN,YAAY,CAAZ,EAAeO,MAA1B,CAFZ;AAIA;AACAC,2BAAOC,MAAP;AACD,mBAPD,MAOO;AACLC,2BAAOC,QAAP,GAAkB,YAAlB;AACD;AACF,iBAXD,MAWO;AACLD,yBAAOC,QAAP,GAAkB,YAAlB;AACD;;AAhBQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAX;;AAAA;AAAA;AAAA;;AAAA;AAAA,OADU;AAmBVC;AAAA,0EAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACqBC,YAAY,MAAZ,EAAoB;AAC3CC,sBAAI;AADuC,iBAApB,EAEtB;AACDZ,0BAAQ;AADP,iBAFsB,CADrB;;AAAA;AACAa,4BADA;;AAMJ,oBAAIA,YAAJ,EAAkB;AAChBL,yBAAOC,QAAP,GAAkB,YAAlB;AACD,iBAFD,MAEO;AACL7B,yBAAO,sBAAP,EAA+B,OAA/B;AACD;;AAVG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAnBU,GAAZ;;AAiCAe,MAAIC,QAAJ;;AAEA;;;;AAIA,MAAMkB,eAAe9B,SAASiB,aAAT,CAAuB,eAAvB,CAArB;AACA,MAAMc,oBAAoBD,aAAab,aAAb,CAA2B,wBAA3B,CAA1B;AACA,MAAMe,mBAAmBF,aAAab,aAAb,CAA2B,oBAA3B,CAAzB;AACA,MAAMgB,oBAAoBjC,SAASiB,aAAT,CAAuB,iBAAvB,CAA1B;AACA,MAAMiB,cAAclC,SAASiB,aAAT,CAAuB,cAAvB,CAApB;AACA,MAAMkB,iBAAiBnC,SAASiB,aAAT,CAAuB,kBAAvB,CAAvB;;AAEA,MAAMK,SAAS;AACbC;AAAA,0EAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACmBV,UAAU,SAAV,EAAqB,EAAC,QAAS,QAAV,EAArB,CADnB;;AAAA;AACFuB,4BADE;;AAAA,qBAEFA,aAAarB,MAFX;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAG0BO,OAAOe,GAAP,CAAWD,YAAX,CAH1B;;AAAA;AAGAE,iCAHA;;AAIJR,6BAAab,aAAb,CAA2B,eAA3B,EAA4Cb,KAA5C,CAAkDC,OAAlD,GAA4D,MAA5D;AACA,oBAAIiC,iBAAJ,EAAuB;AACrBP,oCAAkBd,aAAlB,CAAgC,GAAhC,EAAqCsB,KAArC;AACD;AAPG;AAAA;;AAAA;AASJR,kCAAkBzB,SAAlB,GAA8B,EAA9B;AACAkC,0BAAUlC,SAAV,GAAsB,EAAtB;AACAmC,0BAAUnC,SAAV,GAAsB,EAAtB;AACAoC,2BAAWpC,SAAX,GAAuB,EAAvB;AACAqC,2BAAWvC,KAAX,CAAiBC,OAAjB,GAA2B,MAA3B;AACAuC,4BAAYxC,KAAZ,CAAkBC,OAAlB,GAA4B,MAA5B;AACAyB,6BAAab,aAAb,CAA2B,eAA3B,EAA4Cb,KAA5C,CAAkDC,OAAlD,GAA4D,OAA5D;AACA2B,iCAAiBO,KAAjB;;AAhBI;AAmBFM,0BAnBE,GAmBWC,WAAW,IAAIC,IAAJ,EAAX,CAnBX;;AAoBN/C,yBAASO,IAAT,CAAcyC,YAAd,CAA2B,YAA3B,EAAyCH,UAAzC;;AApBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAR;;AAAA;AAAA;AAAA;;AAAA;AAAA,OADa;AAwBbR;AAAA,0EAAM,kBAAOY,IAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACJC,wBAAQC,GAAR,CAAYF,IAAZ;AACAlB,kCAAkBzB,SAAlB,GAA8B,EAA9B;AACI8C,6BAHA,GAGgBH,KAAKI,MAAL,CAAY,UAACC,KAAD,EAAQC,KAAR,EAAeC,GAAf,EAAuB;AACrD,sBAAIF,MAAMG,IAAN,IAAc,QAAlB,EACA,OAAOH,KAAP;AACD,iBAHmB,CAHhB;AAOAI,0BAPA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAQmBN,cAAcO,OAAd,EARnB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAQMJ,qBARN;AAQaK,iBARb;AASEC,2BATF,GASgB7D,SAASiB,aAAT,yBAA4C2C,EAAEE,KAA9C,SAThB;;AAAA,sBAUED,eAAe,IAVjB;AAAA;AAAA;AAAA;;AAWIE,oBAXJ,GAWW/D,SAASC,aAAT,CAAuB,IAAvB,CAXX;AAAA;AAAA,uBAYmB+D,UAAUJ,EAAEb,IAAZ,CAZnB;;AAAA;AAYAW,0BAZA;;AAaAG,4BAAY5C,aAAZ,CAA0B,IAA1B,EAAgCX,SAAhC,uBAA6DsD,EAAEhC,EAA/D,wBAAkFgC,EAAEE,KAApF,yBAA2GF,EAAEK,MAA7G,mCAA8IL,EAAEK,MAAhJ,6HAGSP,UAHT;AAbA;AAAA;;AAAA;AAkBIpC,uBAlBJ,GAkBatB,SAASC,aAAT,CAAuB,SAAvB,CAlBb;AAmBIiE,qBAnBJ,GAmBYlE,SAASC,aAAT,CAAuB,IAAvB,CAnBZ;AAoBI8D,qBApBJ,GAoBW/D,SAASC,aAAT,CAAuB,IAAvB,CApBX;;AAqBAqB,wBAAO0B,YAAP,CAAoB,iBAApB,EAAuCY,EAAEE,KAAzC;AACAI,sBAAMC,WAAN,GAAoBP,EAAEE,KAAtB;AAtBA;AAAA,uBAuBmBE,UAAUJ,EAAEb,IAAZ,CAvBnB;;AAAA;AAuBAW,0BAvBA;;AAwBAK,sBAAKzD,SAAL,uBAAkCsD,EAAEhC,EAApC,wBAAuDgC,EAAEE,KAAzD,yBAAgFF,EAAEK,MAAlF,4CAA2HL,EAAEK,MAA7H,0BACKL,EAAEK,MADP,8HAISP,UAJT;AAKApC,wBAAOd,WAAP,CAAmB0D,KAAnB;AACA5C,wBAAOd,WAAP,CAAmBuD,KAAnB;AACAhC,kCAAkBvB,WAAlB,CAA8Bc,OAA9B;;AA/BA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,kDAkCG,IAlCH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAxBa;AA4Db8C;AAAA,0EAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AACAC,2BADA,GACcrE,SAASiB,aAAT,CAAuB,cAAvB,CADd;AAEAqD,4BAFA,GAEetE,SAASiB,aAAT,CAAuB,eAAvB,CAFf;;AAAA,sBAIAoD,YAAYf,KAAZ,IAAqB,EAArB,IAA2BgB,aAAahB,KAAb,IAAsB,EAJjD;AAAA;AAAA;AAAA;;AAAA,sBAKErB,kBAAkBsC,YAAlB,CAA+B,WAA/B,KAA+C,QALjD;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAM4B1D,UAAU,SAAV,EAAqB;AAC/C,2BAASwD,YAAYf,KAAZ,CAAkBkB,WAAlB,GAAgCC,IAAhC,EADsC;AAE/C,4BAAUH,aAAahB,KAAb,CAAmBkB,WAAnB,GAAiCC,IAAjC;AAFqC,iBAArB,CAN5B;;AAAA;AAMIC,+BANJ;;AAAA,sBAUIA,gBAAgB3D,MAAhB,IAA0B,CAV9B;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAYsB4D,cAAc,SAAd,EAAyB,CAAC;AAC5C,2BAASN,YAAYf,KAAZ,CAAkBkB,WAAlB,GAAgCC,IAAhC,EADmC;AAE5C,4BAAUH,aAAahB,KAAb,CAAmBkB,WAAnB,GAAiCC,IAAjC,EAFkC;AAG5C,0BAAQ,QAHoC;AAI5C,0BAAQ,IAAI1B,IAAJ;AAJoC,iBAAD,CAAzB,CAZtB;;AAAA;AAYM6B,uBAZN;;;AAmBE,oBAAIA,OAAJ,EAAa;AACXC;AACAvD,yBAAOC,MAAP;AACD;AAtBH;AAAA;;AAAA;AAwBE3B,uBAAO,uBAAP,EAAgC,OAAhC;;AAxBF;AAAA;AAAA;;AAAA;AAAA,sBA0BSqC,kBAAkBsC,YAAlB,CAA+B,WAA/B,KAA+C,QA1BxD;AAAA;AAAA;AAAA;;AAAA;AAAA,uBA2BsB5C,YAAY,SAAZ,EAAuB;AAC3C,2BAASM,kBAAkBsC,YAAlB,CAA+B,YAA/B,CADkC;AAE3C,4BAAUtC,kBAAkBsC,YAAlB,CAA+B,aAA/B;AAFiC,iBAAvB,EAGnB;AACD,2BAASF,YAAYf,KAAZ,CAAkBkB,WAAlB,GAAgCC,IAAhC,EADR;AAED,4BAAUH,aAAahB,KAAb,CAAmBkB,WAAnB,GAAiCC,IAAjC;AAFT,iBAHmB,CA3BtB;;AAAA;AA2BIK,yBA3BJ;;;AAmCA5B,wBAAQC,GAAR,CAAY2B,SAAZ;;AAEA,oBAAIA,SAAJ,EAAe;AACbD;AACAvD,yBAAOC,MAAP;AACD;;AAxCD;AAAA;AAAA;;AAAA;AA2CF3B,uBAAO,uBAAP,EAAgC,OAAhC;;AA3CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;;AAAA;AAAA;AAAA;;AAAA;AAAA,OA5Da;AA0GbmF,aAAU,iBAACC,CAAD,EAAO;AACf,UAAIC,QAAQD,EAAEE,MAAd;AACA,UAAID,MAAME,QAAN,IAAkB,GAAlB,IAAyBF,MAAME,QAAN,IAAkB,OAA/C,EAAwD;AACtD,YAAIC,aAAaH,MAAMI,aAAN,CAAoBd,YAApB,CAAiC,YAAjC,CAAjB;AACA,YAAIe,cAAcL,MAAMI,aAAN,CAAoBd,YAApB,CAAiC,aAAjC,CAAlB;AACA;AACAvE,iBAASO,IAAT,CAAcyC,YAAd,CAA2B,YAA3B,EAAyCoC,UAAzC;AACApF,iBAASO,IAAT,CAAcyC,YAAd,CAA2B,aAA3B,EAA0CsC,WAA1C;;AAEA,YAAIC,mBAAmBzD,aAAa0D,gBAAb,CAA8B,IAA9B,CAAvB;;AAPsD;AAAA;AAAA;;AAAA;AAStD,gCAAcD,gBAAd,mIAAgC;AAAA,gBAAvB3B,CAAuB;;AAC9BA,cAAE1D,SAAF,CAAYQ,MAAZ,CAAmB,QAAnB;AACD;AAXqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYtDuE,cAAMI,aAAN,CAAoBnF,SAApB,CAA8BC,GAA9B,CAAkC,QAAlC;;AAEAgC,uBAAe/B,KAAf,CAAqBC,OAArB,GAA+B,OAA/B;;AAEAoF,aAAKlE,MAAL,CAAY6D,UAAZ,EAAwBE,WAAxB;AACD,OAjBD,MAiBO,IAAIL,MAAMS,SAAN,IAAmB,aAAvB,EAAsC;AAC3C,YAAIN,cAAaH,MAAMI,aAAN,CAAoBd,YAApB,CAAiC,YAAjC,CAAjB;AACA,YAAIe,eAAcL,MAAMI,aAAN,CAAoBd,YAApB,CAAiC,aAAjC,CAAlB;AACA,YAAIoB,YAAYV,MAAMI,aAAN,CAAoBO,QAApB,CAA6B,CAA7B,EAAgCzB,WAAhD;AACA7C,eAAOuE,MAAP,CAAcF,SAAd,EAAyBP,WAAzB,EAAqCE,YAArC;AACD,OALM,MAKA,IAAIL,MAAMS,SAAN,IAAmB,aAAvB,EAAsC;AAC3C,YAAII,cAAcb,MAAMI,aAAN,CAAoBd,YAApB,CAAiC,WAAjC,CAAlB;AACAvC,yBAAiBO,KAAjB;AACAvC,iBAASiB,aAAT,CAAuB,eAAvB,EAAwCqC,KAAxC,GAAgDwC,WAAhD;AACA9F,iBAASiB,aAAT,CAAuB,cAAvB,EAAuCqC,KAAvC,GAA+C2B,MAAMI,aAAN,CAAoBd,YAApB,CAAiC,YAAjC,CAA/C;AACAtC,0BAAkBkC,WAAlB,GAAgC,eAAhC;AACAlC,0BAAkBe,YAAlB,CAA+B,WAA/B,EAA4C,QAA5C;AACAf,0BAAkBe,YAAlB,CAA+B,SAA/B,EAA0CiC,MAAMI,aAAN,CAAoBd,YAApB,CAAiC,SAAjC,CAA1C;AACAtC,0BAAkBe,YAAlB,CAA+B,YAA/B,EAA6CiC,MAAMI,aAAN,CAAoBd,YAApB,CAAiC,YAAjC,CAA7C;AACAtC,0BAAkBe,YAAlB,CAA+B,aAA/B,EAA8CiC,MAAMI,aAAN,CAAoBd,YAApB,CAAiC,aAAjC,CAA9C;AACArC,oBAAYjB,aAAZ,kBAAyCgE,MAAMI,aAAN,CAAoBd,YAApB,CAAiC,YAAjC,CAAzC,QAA4FrE,SAA5F,CAAsGC,GAAtG,CAA0G,UAA1G;AACD;AACF,KA9IY;AA+Ib0F;AAAA,0EAAQ,kBAAOhG,IAAP,EAAakG,SAAb,EAAwBC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AACFC,oBADE,GACKC,0CAAwCrG,IAAxC,OADL;;AAAA,qBAEFoG,IAFE;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAGsBE,iBAAiB,SAAjB,EAA4B;AACpD,2BAASJ,SAD2C;AAEpD,4BAAUC;AAF0C,iBAA5B,CAHtB;;AAAA;AAGAI,6BAHA;;AAOJ,oBAAIA,aAAJ,EAAmB;AAClB9E,yBAAOC,MAAP;AACC3B,yBAAO,sBAAP,EAA+B,MAA/B;AACD;;AAVG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAR;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA/Ia,GAAf;;AA8JAqC,oBAAkBoE,gBAAlB,CAAmC,OAAnC,EAA4C/E,OAAO8C,GAAnD;AACArC,oBAAkBsE,gBAAlB,CAAmC,OAAnC,EAA4C/E,OAAOyD,OAAnD;AACA/C,mBAAiBqE,gBAAjB,CAAkC,OAAlC,EAA2CC,oBAA3C;AACApE,cAAYmE,gBAAZ,CAA6B,OAA7B,EAAsCE,kBAAtC;AACA;AACA,WAASD,oBAAT,GAAgC;AAC9BtG,aAASO,IAAT,CAAcL,SAAd,CAAwBC,GAAxB,CAA4B,SAA5B;AACAH,aAASO,IAAT,CAAc8F,gBAAd,CAA+B,OAA/B,EAAwCG,eAAxC;AACAxG,aAASO,IAAT,CAAc8F,gBAAd,CAA+B,OAA/B,EAAwCI,WAAxC;AACAzG,aAASiB,aAAT,CAAuB,eAAvB,EAAwCb,KAAxC,CAA8CC,OAA9C,GAAwD,OAAxD;AACAL,aAASiB,aAAT,CAAuB,0BAAvB,EAAmDoF,gBAAnD,CAAoE,OAApE,EAA6EK,mBAA7E;AACA1G,aAASiB,aAAT,CAAuB,eAAvB,EAAwC0F,KAAxC;AACA;AACD;AACD;AACA,MAAMC,6BAA6B,SAA7BA,0BAA6B,CAAC5B,CAAD,EAAO;AACxC,QAAIA,EAAE6B,OAAF,IAAa,EAAjB,EAAqB;AACnB5E,wBAAkBM,KAAlB;AACD;AACF,GAJD;AAKA;AACA,WAASgE,kBAAT,CAA4BvB,CAA5B,EAA+B;AAC7B,QAAIA,EAAEE,MAAF,CAASC,QAAT,IAAqB,MAAzB,EAAiC;AAC/B,UAAIH,EAAEE,MAAF,CAASf,WAAT,IAAwB,OAA5B,EAAqC;AACnCnE,iBAASiB,aAAT,CAAuB,cAAvB,EAAuC+B,YAAvC,CAAoD,MAApD,EAA4D,QAA5D;AACAhD,iBAASiB,aAAT,CAAuB,cAAvB,EAAuCqC,KAAvC,GAA+C0B,EAAEE,MAAF,CAASf,WAAxD;AACD,OAHD,MAGO;AACLnE,iBAASiB,aAAT,CAAuB,cAAvB,EAAuCqC,KAAvC,GAA+C,EAA/C;AACAtD,iBAASiB,aAAT,CAAuB,cAAvB,EAAuC+B,YAAvC,CAAoD,MAApD,EAA4D,MAA5D;AACD;;AAED,UAAI8D,iBAAiB9G,SAASwF,gBAAT,CAA0B,cAA1B,CAArB;AAT+B;AAAA;AAAA;;AAAA;AAU/B,8BAAcsB,cAAd,mIAA8B;AAAA,cAArBlD,CAAqB;;AAC5BA,YAAE1D,SAAF,CAAYQ,MAAZ,CAAmB,UAAnB;AACD;AAZ8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAa/BsE,QAAEE,MAAF,CAAShF,SAAT,CAAmBC,GAAnB,CAAuB,UAAvB;AACD;AACF;;AAGD;;;AAGA,MAAM4G,aAAa/G,SAASiB,aAAT,CAAuB,aAAvB,CAAnB;AACA,MAAMuB,YAAYuE,WAAW9F,aAAX,CAAyB,YAAzB,CAAlB;AACA,MAAM+F,kBAAkBhH,SAASiB,aAAT,CAAuB,eAAvB,CAAxB;AACA,MAAM0B,aAAa3C,SAASiB,aAAT,CAAuB,uBAAvB,CAAnB;AACA,MAAM2B,cAAc5C,SAASiB,aAAT,CAAuB,sBAAvB,CAApB;;AAEA,MAAMwE,OAAO;AACXlE;AAAA,0EAAQ,kBAAO0F,KAAP,EAAc3F,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACiBT,UAAU,SAAV,EAAqB;AAC1C,2BAASoG,KADiC;AAE1C,4BAAU3F;AAFgC,iBAArB,CADjB;;AAAA;AACF4F,0BADE;;AAAA,sBAMFA,WAAWnG,MAAX,GAAoB,CANlB;AAAA;AAAA;AAAA;;AAOEqC,6BAPF,GAOkB8D,WAAW7D,MAAX,CAAkB,UAACC,KAAD,EAAQC,KAAR,EAAeC,GAAf,EAAuB;AAC7D,sBAAIF,MAAM6D,IAAN,IAAcC,SAAlB,EAA6B;AAC3B,2BAAO9D,KAAP;AACD;AACF,iBAJqB,CAPlB;AAAA;AAAA,uBAYwBmC,KAAKpD,GAAL,CAASe,aAAT,CAZxB;;AAAA;AAYAiE,+BAZA;;AAaJ7E,0BAAUvB,aAAV,CAAwB,GAAxB,EAA6BsB,KAA7B;AAbI;AAAA;;AAAA;AAeJC,0BAAUlC,SAAV,GAAsB,EAAtB;AACAmC,0BAAUnC,SAAV,GAAsB,EAAtB;AACAoC,2BAAWpC,SAAX,GAAuB,EAAvB;AACAqC,2BAAWvC,KAAX,CAAiBC,OAAjB,GAA2B,MAA3B;AACAuC,4BAAYxC,KAAZ,CAAkBC,OAAlB,GAA4B,MAA5B;AACAiH,2BAAWrG,aAAX,CAAyB,eAAzB,EAA0Cb,KAA1C,CAAgDC,OAAhD,GAA0D,OAA1D;;AApBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAR;;AAAA;AAAA;AAAA;;AAAA;AAAA,OADW;AAwBXgC;AAAA,2EAAK,kBAAOY,IAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACHqE,2BAAWrG,aAAX,CAAyB,eAAzB,EAA0Cb,KAA1C,CAAgDC,OAAhD,GAA0D,MAA1D;AACM0D,oBAFH,GAEUgD,WAAW9F,aAAX,CAAyB,IAAzB,CAFV;;AAGH8C,qBAAKzD,SAAL,GAAiB,EAAjB;AACIiH,qBAJD,GAISvH,SAASO,IAAT,CAAcgE,YAAd,CAA2B,YAA3B,CAJT;AAAA;AAAA;AAAA;AAAA;AAAA,6BAKWtB,IALX;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKMW,iBALN;AAAA;AAAA,uBAMoB4D,cAAcD,KAAd,EAAqB3D,EAAE6D,QAAF,CAAWC,SAAhC,EAA2C9D,EAAE6D,QAAF,CAAWE,OAAtD,CANpB;;AAAA;AAMGC,wBANH;;;AAQD7D,qBAAKzD,SAAL,uBAAkCsD,EAAEhC,EAApC,oBAAkD2F,SAAS3D,EAAE6D,QAAF,CAAWE,OAApB,GAA8B,WAA9B,GAA4C,QAA9F,UAA0G/D,EAAEH,IAA5G,yBAAkIG,EAAEH,IAApI,yBAA0JG,EAAEE,KAA5J,yBAAmLF,EAAEK,MAArL,+CAAiOL,EAAE6D,QAAF,CAAWC,SAA5O,2BAAyQ9D,EAAE6D,QAAF,CAAWE,OAApR,uBAA2S/D,EAAEuD,IAA7S,yBAAmUvD,EAAE6D,QAAF,CAAWI,MAA9U,wBACKjE,EAAEuD,IADP,yHAIaS,QAJb;;AARC;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,kDAeI,IAfJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAL;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAxBW;AAyCXxD;AAAA,2EAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AACG0D,2BADH,GACiB9H,SAASO,IAAT,CAAcgE,YAAd,CAA2B,aAA3B,CADjB;AAEGwD,0BAFH,GAEgB/H,SAASO,IAAT,CAAcgE,YAAd,CAA2B,YAA3B,CAFhB;AAGGyD,0BAHH,GAGgBhI,SAASiB,aAAT,CAAuB,aAAvB,CAHhB;AAKGgH,+BALH,GAKqBjI,SAASiB,aAAT,CAAuB,kBAAvB,CALrB,EAKiE;;AAC9DiH,6BANH,GAMmBlI,SAASiB,aAAT,CAAuB,gBAAvB,CANnB,EAM6D;;AAN7D,sBAQC+G,WAAW1E,KAAX,IAAoB,EARrB;AAAA;AAAA;AAAA;;AAAA,sBASG0D,gBAAgBzC,YAAhB,CAA6B,WAA7B,KAA6C,QAThD;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAUqB1D,UAAU,SAAV,EAAqB;AACvC,2BAASkH,WAAWvD,WAAX,GAAyBC,IAAzB,EAD8B;AAEvC,4BAAUqD,YAAYtD,WAAZ,GAA0BC,IAA1B,EAF6B;AAGvC,0BAAQuD,WAAW1E,KAAX,CAAiBkB,WAAjB,GAA+BC,IAA/B;AAH+B,iBAArB,CAVrB;;AAAA;AAUK0D,uBAVL;;;AAgBC,oBAAIA,QAAQpH,MAAR,IAAkB,CAAtB,EAAyB;AACnB6D,yBADmB,GACTD,cAAc,SAAd,EAAyB,CAAC;AACtC,6BAASoD,WAAWvD,WAAX,GAAyBC,IAAzB,EAD6B;AAEtC,8BAAUqD,YAAYtD,WAAZ,GAA0BC,IAA1B,EAF4B;AAGtC,4BAAQuD,WAAW1E,KAAX,CAAiBkB,WAAjB,GAA+BC,IAA/B,EAH8B;AAItC,4BAAQ,IAAI1B,IAAJ,EAJ8B;AAKtC,4BAAS,SAL6B;AAMtC,gCAAY;AACV,mCAAakF,gBAAgB3E,KADnB;AAEV,iCAAW4E,cAAc5E,KAFf;AAGV,gCAAU;AAHA;AAN0B,mBAAD,CAAzB,CADS;;;AAcvB,sBAAIsB,OAAJ,EAAa;AACXC;AACAY,yBAAKlE,MAAL,CAAYwG,UAAZ,EAAwBD,WAAxB;AACD;AACF,iBAlBD,MAkBO;AACLlI,yBAAO,mBAAP,EAA4B,OAA5B;AACD;AApCF;AAAA;;AAAA;AAqCM,oBAAIoH,gBAAgBzC,YAAhB,CAA6B,WAA7B,KAA6C,QAAjD,EAA2D;AAC5D6D,yCAD4D,GAClCpI,SAASiB,aAAT,CAAuB,aAAvB,EAAsCoH,OADJ;AAE5DvD,2BAF4D,GAEhDnD,YAAY,SAAZ,EAAuB;AACrCC,wBAAI0G,SAAStB,gBAAgBzC,YAAhB,CAA6B,SAA7B,CAAT;AADiC,mBAAvB,EAEb;AACD,4BAAQyD,WAAW1E,KAAX,CAAiBkB,WAAjB,GAA+BC,IAA/B,EADP;AAED,4BAAS2D,0BAA0B,WAA1B,GAAwC,SAFhD;AAGD,gCAAY;AACV,mCAAaA,0BAA0B,EAA1B,GAA+BH,gBAAgB3E,KADlD;AAEV,iCAAW8E,0BAA0B,EAA1B,GAA+BF,cAAc5E;AAF9C;AAHX,mBAFa,CAFgD;;AAYhE,sBAAIwB,SAAJ,EAAe;AACbD;AACAY,yBAAKlE,MAAL,CAAYwG,UAAZ,EAAwBD,WAAxB;AACD;AACF;;AArDA;AAAA;AAAA;;AAAA;AAuDDlI,uBAAO,iBAAP,EAA0B,OAA1B;;AAvDC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAL;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAzCW;AAmGXmF,aAAS,iBAACC,CAAD,EAAO;AACd,UAAIC,QAAQD,EAAEE,MAAd;AACA,UAAID,MAAME,QAAN,IAAkB,GAAtB,EAA2B;AACzB,YAAIoD,UAAUtD,MAAMI,aAAN,CAAoBd,YAApB,CAAiC,SAAjC,CAAd;AACA,YAAIiE,aAAalB,WAAW9B,gBAAX,CAA4B,IAA5B,CAAjB;;AAFyB;AAAA;AAAA;;AAAA;AAIzB,gCAAcgD,UAAd,mIAA0B;AAAA,gBAAjB5E,CAAiB;;AACxBA,cAAE1D,SAAF,CAAYQ,MAAZ,CAAmB,QAAnB;AACD;AANwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQzBuE,cAAMI,aAAN,CAAoBnF,SAApB,CAA8BC,GAA9B,CAAkC,QAAlC;AACAH,iBAASO,IAAT,CAAcyC,YAAd,CAA2B,cAA3B,EAA2CuF,OAA3C;AACA5F,mBAAWvC,KAAX,CAAiBC,OAAjB,GAA2B,OAA3B;AACAuC,oBAAYxC,KAAZ,CAAkBC,OAAlB,GAA4B,OAA5B;AACAoI,aAAKpG,GAAL,CAASiG,SAASC,OAAT,CAAT;AACAG,cAAMrG,GAAN,CAAUiG,SAASC,OAAT,CAAV;AAED,OAfD,MAeO,IAAIvD,EAAEE,MAAF,CAASQ,SAAT,IAAsB,aAA1B,EAAyC;AAC9CD,aAAKI,MAAL,CACEZ,MAAMI,aAAN,CAAoBd,YAApB,CAAiC,YAAjC,CADF,EAEEU,MAAMI,aAAN,CAAoBd,YAApB,CAAiC,aAAjC,CAFF,EAGEU,MAAMI,aAAN,CAAoBd,YAApB,CAAiC,SAAjC,CAHF,EAIEU,MAAMI,aAAN,CAAoBO,QAApB,CAA6B,CAA7B,EAAgCzB,WAJlC;AAMD,OAPM,MAOA,IAAIa,EAAEE,MAAF,CAASQ,SAAT,IAAsB,WAA1B,EAAuC;AAC5C,YAAIiD,kBAAkB1D,MAAMI,aAAN,CAAoBd,YAApB,CAAiC,WAAjC,CAAtB;AACA,YAAIqE,oBAAoB3D,MAAMI,aAAN,CAAoBd,YAApB,CAAiC,gBAAjC,CAAxB;AACA,YAAIsE,kBAAkB5D,MAAMI,aAAN,CAAoBd,YAApB,CAAiC,cAAjC,CAAtB;AACA,YAAIuE,eAAe7D,MAAMI,aAAN,CAAoBd,YAApB,CAAiC,aAAjC,CAAnB;;AAEApC,uBAAeI,KAAf;AACAvC,iBAASiB,aAAT,CAAuB,aAAvB,EAAsCqC,KAAtC,GAA8CqF,eAA9C;AACA3I,iBAASiB,aAAT,CAAuB,kBAAvB,EAA2CqC,KAA3C,GAAmDsF,iBAAnD;AACA5I,iBAASiB,aAAT,CAAuB,gBAAvB,EAAyCqC,KAAzC,GAAiDuF,eAAjD;AACA7B,wBAAgB7C,WAAhB,GAA8B,aAA9B;AACA6C,wBAAgBhE,YAAhB,CAA6B,WAA7B,EAA0C,QAA1C;AACAgE,wBAAgBhE,YAAhB,CAA6B,SAA7B,EAAwCiC,MAAMI,aAAN,CAAoBd,YAApB,CAAiC,SAAjC,CAAxC;AACAvE,iBAASiB,aAAT,CAAuB,kBAAvB,EAA2CoF,gBAA3C,CAA4D,QAA5D,EAAsE,UAACrB,CAAD,EAAO;AAC3EhF,mBAASiB,aAAT,CAAuB,gBAAvB,EAAyC+B,YAAzC,CAAsD,KAAtD,EAA6DgC,EAAEE,MAAF,CAAS5B,KAAtE;AACD,SAFD;;AAIA,YAAGwF,gBAAgB,WAAnB,EAAgC;AAC9B9I,mBAASiB,aAAT,CAAuB,aAAvB,EAAsCoH,OAAtC,GAAgD,IAAhD;AACD,SAFD,MAEM;AACJrI,mBAASiB,aAAT,CAAuB,aAAvB,EAAsCoH,OAAtC,GAAgD,KAAhD;AACD;AACDrI,iBAASiB,aAAT,CAAuB,6BAAvB,EAAsDb,KAAtD,CAA4DC,OAA5D,GAAsE,MAAtE;AACD;AACF,KAnJU;AAoJXwF;AAAA,2EAAQ,mBAAOoB,KAAP,EAAc3F,MAAd,EAAsByH,EAAtB,EAA0BC,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AACF/C,oBADE,GACKC,0CAAwC8C,IAAxC,OADL;;AAAA,qBAGF/C,IAHE;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAIkBE,iBAAiB,SAAjB,EAA4B;AAChDvE,sBAAI0G,SAASS,EAAT;AAD4C,iBAA5B,CAJlB;;AAAA;AAIAE,yBAJA;;;AAQJ,oBAAIA,SAAJ,EAAe;AACbxD,uBAAKlE,MAAL,CAAY0F,KAAZ,EAAmB3F,MAAnB;AACAmH,uBAAKpG,GAAL,CAASiG,SAAStI,SAASO,IAAT,CAAcgE,YAAd,CAA2B,cAA3B,CAAT,CAAT;AACAmE,wBAAMrG,GAAN,CAAUiG,SAAStI,SAASO,IAAT,CAAcgE,YAAd,CAA2B,cAA3B,CAAT,CAAV;AACD;;AAZG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAR;;AAAA;AAAA;AAAA;;AAAA;AAAA;AApJW,GAAb;;AAqKApC,iBAAekE,gBAAf,CAAgC,OAAhC,EAAyC6C,kBAAzC;AACAlC,kBAAgBX,gBAAhB,CAAiC,OAAjC,EAA0CZ,KAAKrB,GAA/C;AACA5B,YAAU6D,gBAAV,CAA2B,OAA3B,EAAoCZ,KAAKV,OAAzC;;AAEA;AACA,WAASmE,kBAAT,GAA8B;AAC5BlJ,aAASO,IAAT,CAAcL,SAAd,CAAwBC,GAAxB,CAA4B,SAA5B;AACAH,aAASO,IAAT,CAAc8F,gBAAd,CAA+B,OAA/B,EAAwCG,eAAxC;AACAxG,aAASO,IAAT,CAAc8F,gBAAd,CAA+B,OAA/B,EAAwCI,WAAxC;AACAzG,aAASiB,aAAT,CAAuB,aAAvB,EAAsCb,KAAtC,CAA4CC,OAA5C,GAAsD,OAAtD;AACAL,aAASiB,aAAT,CAAuB,wBAAvB,EAAiDoF,gBAAjD,CAAkE,OAAlE,EAA2EK,mBAA3E;AACA1G,aAASiB,aAAT,CAAuB,aAAvB,EAAsC0F,KAAtC;AACA3G,aAASiB,aAAT,CAAuB,aAAvB,EAAsCoF,gBAAtC,CAAuD,UAAvD,EAAmE8C,wBAAnE;;AAEA,QAAIC,cAAc,IAAIrG,IAAJ,EAAlB;AACAqG,kBAAiBA,YAAYC,WAAZ,EAAjB,UAA8CD,YAAYE,QAAZ,GAAuBC,QAAvB,GAAkCxI,MAAlC,IAA4C,CAA5C,GAAgD,MAAMqI,YAAYE,QAAZ,EAAtD,GAA+EF,YAAYE,QAAZ,EAA7H,WAAuJF,YAAYI,OAAZ,GAAsBD,QAAtB,GAAiCxI,MAAjC,IAA2C,CAA3C,GAA+C,MAAMqI,YAAYI,OAAZ,EAArD,GAA6EJ,YAAYI,OAAZ,EAApO;AACAxJ,aAASiB,aAAT,CAAuB,kBAAvB,EAA2C+B,YAA3C,CAAwD,KAAxD,EAA+DoG,WAA/D;AACApJ,aAASiB,aAAT,CAAuB,gBAAvB,EAAyC+B,YAAzC,CAAsD,KAAtD,EAA6DoG,WAA7D;AACApJ,aAASiB,aAAT,CAAuB,kBAAvB,EAA2CqC,KAA3C,GAAmD8F,WAAnD;AACApJ,aAASiB,aAAT,CAAuB,kBAAvB,EAA2CoF,gBAA3C,CAA4D,QAA5D,EAAsE,UAACrB,CAAD,EAAO;AAC3EhF,eAASiB,aAAT,CAAuB,gBAAvB,EAAyC+B,YAAzC,CAAsD,KAAtD,EAA6DgC,EAAEE,MAAF,CAAS5B,KAAtE;AACD,KAFD;AAGD;AACD;AACA,MAAM6F,2BAA2B,SAA3BA,wBAA2B,CAACnE,CAAD,EAAO;AACtC,QAAIA,EAAE6B,OAAF,IAAa,EAAjB,EAAqB;AACnBG,sBAAgBzE,KAAhB;AACD;AACF,GAJD;AAKA;AACA,WAASiF,aAAT,CAAuBD,KAAvB,EAA8BkC,KAA9B,EAAqCC,GAArC,EAA0C;AACxC;AACA;AACA,QAAIC,YAAYpC,MAAMqC,KAAN,CAAY,GAAZ,CAAhB;AACA,QAAIC,YAAYJ,MAAMG,KAAN,CAAY,GAAZ,CAAhB;AACA,QAAIE,UAAUJ,IAAIE,KAAJ,CAAU,GAAV,CAAd;AACA,QAAGH,SAAS,EAAT,IAAeC,OAAO,EAAtB,IAA4BnC,SAAS,EAAxC,EAA4C;AAC1C,UAAGmC,OAAOnC,KAAV,EAAiB;AACfwC,eAAOC,OAAP,CAAeC,WAAf,CAA2B,EAACnK,MAAM,OAAP,EAA3B;AACA,eAAO,mBAAP;AACD,OAHD,MAIK,IAAG4J,MAAMnC,KAAT,EAAgB;AACnB,YAAGkC,SAASlC,KAAZ,EAAmB;AACjB,iBAAO,gBAAP;AACD,SAFD,MAGK,IAAGuC,QAAQ,CAAR,KAAcH,UAAU,CAAV,CAAjB,EAA+B;AAClC,iBAAO,uBAAP;AACD,SAFI,MAEE;AACL,iCAAoBG,QAAQ,CAAR,IAAaH,UAAU,CAAV,CAAjC;AACD;AACF,OATI,MAUA,IAAID,MAAMnC,KAAV,EAAiB;AACpB,YAAGuC,QAAQ,CAAR,KAAcH,UAAU,CAAV,CAAjB,EAA+B;AAC7B,iBAAO,sBAAP;AACD,SAFD,MAEO;AACL,qCAAwBA,UAAU,CAAV,IAAeG,QAAQ,CAAR,CAAvC;AACD;AACF;AACF,KAtBD,MAsBO;AACL,aAAO,oBAAP;AACD;AACF;;AAED;;;;AAIA,MAAMI,aAAavH,WAAW1B,aAAX,CAAyB,sBAAzB,CAAnB;AACA,MAAMwB,YAAYE,WAAW1B,aAAX,CAAyB,YAAzB,CAAlB;AACA,MAAMkJ,iBAAiBnK,SAASiB,aAAT,CAAuB,wBAAvB,CAAvB;;AAEA,MAAMwH,OAAO;AACXpG;AAAA,2EAAK,mBAAO0G,EAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACHtG,0BAAUnC,SAAV,GAAsB,EAAtB;AACAN,yBAASiB,aAAT,CAAuB,qBAAvB,EAA8CkD,WAA9C,GAA4D,CAA5D;AACAnE,yBAASiB,aAAT,CAAuB,sBAAvB,EAA+CkD,WAA/C,GAA6D,CAA7D;;AAHG;AAAA,uBAKmBtD,UAAU,SAAV,EAAqB;AACzCe,sBAAImH;AADqC,iBAArB,CALnB;;AAAA;AAKCqB,yBALD;;AAAA,qBAQCA,UAAUrJ,MARX;AAAA;AAAA;AAAA;;AAAA,sBASGqJ,UAAU,CAAV,EAAaC,IAAb,IAAqBjD,SATxB;AAAA;AAAA;AAAA;;AAUKkD,gCAVL,GAUwBF,UAAU,CAAV,EAAaC,IAVrC;;AAAA,qBAWKC,iBAAiBvJ,MAXtB;AAAA;AAAA;AAAA;;AAYG4B,2BAAW1B,aAAX,CAAyB,eAAzB,EAA0Cb,KAA1C,CAAgDC,OAAhD,GAA0D,MAA1D;AACAoC,0BAAUnC,SAAV,GAAsB,EAAtB;AACIiK,6BAdP,GAcuB,CAdvB;AAeOC,8BAfP,GAewB,CAfxB;AAAA;AAAA;AAAA;AAAA;;AAgBG,kCAAcF,gBAAd,2HAAgC;AAAvB1G,mBAAuB;;AAC9BnB,4BAAUnC,SAAV,uBAAuCsD,EAAEhC,EAAzC,mBAAuDgC,EAAE6G,MAAzD,2BAAoF7G,EAAE8G,IAAtF;AACA,sBAAI9G,EAAE6G,MAAF,IAAY,SAAhB,EAA2B;AACzBF;AACAvK,6BAASiB,aAAT,CAAuB,qBAAvB,EAA8CkD,WAA9C,GAA4DoG,aAA5D;AACD,mBAHD,MAGO;AACLC;AACAxK,6BAASiB,aAAT,CAAuB,sBAAvB,EAA+CkD,WAA/C,GAA6DqG,cAA7D;AACD;AACF;AAzBJ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AA2BG7H,2BAAW1B,aAAX,CAAyB,eAAzB,EAA0Cb,KAA1C,CAAgDC,OAAhD,GAA0D,OAA1D;;AA3BH;AAAA;AAAA;;AAAA;AA8BCsC,2BAAW1B,aAAX,CAAyB,eAAzB,EAA0Cb,KAA1C,CAAgDC,OAAhD,GAA0D,OAA1D;;AA9BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAL;;AAAA;AAAA;AAAA;;AAAA;AAAA,OADW;AAmCX+D;AAAA,2EAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AACCuG,0BADD,GACclI,UAAU+C,gBAAV,CAA2B,IAA3B,CADd;AAAA;AAAA,uBAEyBoF,mBAAmBD,UAAnB,CAFzB;;AAAA;AAECE,+BAFD;AAAA;AAAA,uBAGiBlJ,YAAY,SAAZ,EAAuB;AACzCC,sBAAI0G,SAAStI,SAASO,IAAT,CAAcgE,YAAd,CAA2B,cAA3B,CAAT;AADqC,iBAAvB,EAEjB;AACD,0BAAQsG;AADP,iBAFiB,CAHjB;;AAAA;AAGCjG,uBAHD;;;AASH,oBAAIA,OAAJ,EAAa;AACXsF,6BAAW5G,KAAX,GAAmB,EAAnB;AACA,sBAAIb,UAAU+C,gBAAV,CAA2B,IAA3B,EAAiCzE,MAArC,EAA6C;AAC3C4B,+BAAW1B,aAAX,CAAyB,eAAzB,EAA0Cb,KAA1C,CAAgDC,OAAhD,GAA0D,MAA1D;AACD,mBAFD,MAEO;AACLsC,+BAAW1B,aAAX,CAAyB,eAAzB,EAA0Cb,KAA1C,CAAgDC,OAAhD,GAA0D,OAA1D;AACD;AACF;;AAhBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAL;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAnCW;AAqDX0E,aAAS,iBAACC,CAAD,EAAO;AACd,UAAIA,EAAEE,MAAF,CAASC,QAAT,IAAqB,MAAzB,EAAiC;AAC/B,YAAI2F,cAAc9F,EAAEE,MAAF,CAASG,aAA3B;AACA,YAAIyF,YAAYpF,SAAZ,IAAyB,SAA7B,EAAwC;AACtCoF,sBAAY5K,SAAZ,CAAsBQ,MAAtB,CAA6B,SAA7B;AACAoK,sBAAY5K,SAAZ,CAAsBC,GAAtB,CAA0B,UAA1B;AACA,cAAI4K,wBAAwB/K,SAASiB,aAAT,CAAuB,qBAAvB,EAA8CkD,WAA1E;AACA,cAAI6G,yBAAyBhL,SAASiB,aAAT,CAAuB,sBAAvB,EAA+CkD,WAA5E;;AAEAnE,mBAASiB,aAAT,CAAuB,qBAAvB,EAA8CkD,WAA9C,GAA4DmE,SAASyC,qBAAT,IAAkC,CAA9F;AACA/K,mBAASiB,aAAT,CAAuB,sBAAvB,EAA+CkD,WAA/C,GAA6DmE,SAAS0C,sBAAT,IAAmC,CAAhG;AACD,SARD,MAQO;AACLF,sBAAY5K,SAAZ,CAAsBC,GAAtB,CAA0B,SAA1B;AACA2K,sBAAY5K,SAAZ,CAAsBQ,MAAtB,CAA6B,UAA7B;;AAEA,cAAIqK,yBAAwB/K,SAASiB,aAAT,CAAuB,qBAAvB,EAA8CkD,WAA1E;AACA,cAAI6G,0BAAyBhL,SAASiB,aAAT,CAAuB,sBAAvB,EAA+CkD,WAA5E;;AAEAnE,mBAASiB,aAAT,CAAuB,qBAAvB,EAA8CkD,WAA9C,GAA4DmE,SAASyC,sBAAT,IAAkC,CAA9F;AACA/K,mBAASiB,aAAT,CAAuB,sBAAvB,EAA+CkD,WAA/C,GAA6DmE,SAAS0C,uBAAT,IAAmC,CAAhG;AACD;AACDvC,aAAKrE,GAAL;AACD,OArBD,MAqBO,IAAIY,EAAEE,MAAF,CAASC,QAAT,IAAqB,IAAzB,EAA+B;AACpC,YAAIH,EAAEE,MAAF,CAASG,aAAT,CAAuBK,SAAvB,IAAoC,SAAxC,EAAmD;AACjD,cAAIqF,0BAAwB/K,SAASiB,aAAT,CAAuB,qBAAvB,EAA8CkD,WAA1E;AACAnE,mBAASiB,aAAT,CAAuB,qBAAvB,EAA8CkD,WAA9C,GAA4DmE,SAASyC,uBAAT,IAAkC,CAA9F;AACD,SAHD,MAGO;AACL,cAAIC,2BAAyBhL,SAASiB,aAAT,CAAuB,sBAAvB,EAA+CkD,WAA5E;AACAnE,mBAASiB,aAAT,CAAuB,sBAAvB,EAA+CkD,WAA/C,GAA6DmE,SAAS0C,wBAAT,IAAmC,CAAhG;AACD;AACDhG,UAAEE,MAAF,CAASG,aAAT,CAAuB3E,MAAvB;AACAd,eAAO,uBAAP,EAAgC,MAAhC;;AAEA6I,aAAKrE,GAAL;AACD;AACF,KAxFU;AAyFX6G,yBAAqB,+BAAM;AACzBC,2BACCC,IADD,CACM,UAACC,QAAD,EAAc;AAClBxL,eAAOwL,QAAP,EAAiB,SAAjB;AACA3C,aAAKrE,GAAL;AACD,OAJD,EAKCiH,KALD,CAKO,UAACC,KAAD,EAAW;AAChB1L,eAAO0L,KAAP,EAAc,OAAd;AACD,OAPD;AAQD;AAlGU,GAAb;;AAqGA7I,YAAU4D,gBAAV,CAA2B,OAA3B,EAAoCoC,KAAK1D,OAAzC;AACAoF,iBAAe9D,gBAAf,CAAgC,OAAhC,EAAyCoC,KAAKwC,mBAA9C;AACAf,aAAW7D,gBAAX,CAA4B,UAA5B,EAAwCkF,iBAAxC;AACA;AACA,MAAMX,qBAAqB,SAArBA,kBAAqB,CAASY,KAAT,EAAgB;AACzC,QAAIb,aAAa,EAAjB;AADyC;AAAA;AAAA;;AAAA;AAEzC,4BAAuBa,MAAM7H,OAAN,EAAvB,mIAAwC;AAAA;;AAAA;;AAAA,YAA9BJ,KAA8B;AAAA,YAAvBK,CAAuB;;AACtC+G,mBAAWc,IAAX,CAAgB;AACd,gBAAMlI,KADQ;AAEd,oBAAUK,EAAE8B,SAFE;AAGd,kBAAQ9B,EAAEO;AAHI,SAAhB;AAKD;AARwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASzC,WAAOwG,UAAP;AACD,GAVD;AAWA;AACA,WAASY,iBAAT,CAA2BvG,CAA3B,EAA8B;AAC5B,QAAIA,EAAE6B,OAAF,IAAa,EAAb,IAAmB,KAAKvD,KAAL,IAAc,EAArC,EAAyC;AACvC,UAAIoI,UAAU1L,SAASC,aAAT,CAAuB,IAAvB,CAAd;AACAyL,cAAQxL,SAAR,CAAkBC,GAAlB,CAAsB,SAAtB;AACAuL,cAAQpL,SAAR,wBAAuC,KAAKgD,KAA5C;AACAb,gBAAUkJ,YAAV,CAAuBD,OAAvB,EAAgCjJ,UAAUmJ,UAAV,CAAqB,CAArB,CAAhC;AACA,UAAIb,wBAAwB/K,SAASiB,aAAT,CAAuB,qBAAvB,EAA8CkD,WAA1E;AACAnE,eAASiB,aAAT,CAAuB,qBAAvB,EAA8CkD,WAA9C,GAA4DmE,SAASyC,qBAAT,IAAkC,CAA9F;AACAtC,WAAKrE,GAAL;AACD;AACF;AACD;AACA,MAAM8G,qBAAqB,SAArBA,kBAAqB,GAAW;AACpC,WAAO,IAAIW,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,UAAIpB,aAAalI,UAAU+C,gBAAV,CAA2B,IAA3B,CAAjB;AACA,UAAIwG,kBAAkB,CAAtB;AAFsC;AAAA;AAAA;;AAAA;AAGtC,8BAAcrB,UAAd,mIAA0B;AAAA,cAAjB/G,CAAiB;;AACxB,cAAIA,EAAE8B,SAAF,IAAe,UAAnB,EAA+B;AAC7B9B,cAAElD,MAAF;AACAsL;AACD;AACF;AARqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAStC,UAAIA,eAAJ,EAAqB;AACnBF,gBAAQ,+BAAR;AACA9L,iBAASiB,aAAT,CAAuB,sBAAvB,EAA+CkD,WAA/C,GAA6D,CAA7D;AAED,OAJD,MAIO;AACL4H,eAAO,6BAAP;AACD;AAEF,KAjBM,CAAP;AAkBD,GAnBD;;AAqBA;;;;AAIA,MAAME,kBAAkBrJ,YAAY3B,aAAZ,CAA0B,kBAA1B,CAAxB;AACA,MAAMyB,aAAaE,YAAY3B,aAAZ,CAA0B,aAA1B,CAAnB;AACA,MAAMiL,eAAetJ,YAAY3B,aAAZ,CAA0B,eAA1B,CAArB;;AAEA,MAAMyH,QAAQ;AACZrG;AAAA,2EAAK,mBAAO0G,EAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACoBlI,UAAU,SAAV,EAAqB;AAC1Ce,sBAAImH;AADsC,iBAArB,CADpB;;AAAA;AACCoD,0BADD;;AAIHzJ,2BAAWpC,SAAX,GAAuB,EAAvB;;AAJG,qBAKC6L,WAAWpL,MALZ;AAAA;AAAA;AAAA;;AAAA,sBAMGoL,WAAW,CAAX,EAAcC,KAAd,IAAuBhF,SAN1B;AAAA;AAAA;AAAA;;AAOKiF,iCAPL,GAOyBF,WAAW,CAAX,EAAcC,KAPvC;;AAAA,qBAQKC,kBAAkBtL,MARvB;AAAA;AAAA;AAAA;;AASG6B,4BAAY3B,aAAZ,CAA0B,eAA1B,EAA2Cb,KAA3C,CAAiDC,OAAjD,GAA2D,MAA3D;;AATH;AAAA;AAAA;AAAA;AAWG,kCAAcgM,iBAAd,2HAAiC;AAAxBzI,mBAAwB;;AAC/B,sBAAIA,EAAE0I,MAAF,CAAS,GAAT,KAAiB,CAAC,CAAtB,EAAyB;AACnBC,2BADmB,GACT3I,EAAEgG,KAAF,CAAQ,GAAR,CADS;;AAEvB2C,8BAAUA,QAAQC,GAAR,CAAY,UAAClJ,KAAD,EAAQC,KAAR,EAAkB;AACtC,0BAAID,MAAMgJ,MAAN,CAAa,GAAb,KAAqB,CAAC,CAA1B,EAA6B;AAC3B,0CAAgBhJ,KAAhB;AACD,uBAFD,MAEO;AACL,+BAAOA,KAAP;AACD;AACF,qBANS,CAAV;AAOAiJ,8BAAUA,QAAQE,IAAR,CAAa,GAAb,CAAV;AACA/J,+BAAWpC,SAAX,gBAAkCiM,OAAlC;AACD,mBAXD,MAWO;AACL7J,+BAAWpC,SAAX,gBAAkCsD,CAAlC;AACD;AAEF;AA3BJ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AA6BGhB,4BAAY3B,aAAZ,CAA0B,eAA1B,EAA2Cb,KAA3C,CAAiDC,OAAjD,GAA2D,OAA3D;;AA7BH;AAAA;AAAA;;AAAA;AAgCCuC,4BAAY3B,aAAZ,CAA0B,eAA1B,EAA2Cb,KAA3C,CAAiDC,OAAjD,GAA2D,OAA3D;;AAhCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAL;;AAAA;AAAA;AAAA;;AAAA;AAAA,OADY;AAqCZ+D;AAAA,2EAAO,mBAAOY,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACDA,EAAE6B,OAAF,IAAa,EAAb,IAAmBoF,gBAAgB3I,KAAhB,IAAyB,EAD3C;AAAA;AAAA;AAAA;;AAECiF,uBAFD,GAEWD,SAAStI,SAASO,IAAT,CAAcgE,YAAd,CAA2B,cAA3B,CAAT,CAFX;;AAGH3B,4BAAY3B,aAAZ,CAA0B,eAA1B,EAA2Cb,KAA3C,CAAiDC,OAAjD,GAA2D,MAA3D;;AAEIqL,uBALD,GAKW1L,SAASC,aAAT,CAAuB,IAAvB,CALX;;AAMH,oBAAIgM,gBAAgB3I,KAAhB,CAAsBgJ,MAAtB,CAA6B,GAA7B,KAAqC,CAAC,CAA1C,EAA6C;AACvCC,yBADuC,GAC7BN,gBAAgB3I,KAAhB,CAAsBsG,KAAtB,CAA4B,GAA5B,CAD6B;;AAE3C2C,4BAAUA,QAAQC,GAAR,CAAY,UAAClJ,KAAD,EAAQC,KAAR,EAAkB;AACtC,wBAAID,MAAMgJ,MAAN,CAAa,GAAb,KAAqB,CAAC,CAA1B,EAA6B;AAC3B,wCAAgBhJ,KAAhB;AACD,qBAFD,MAEO;AACL,6BAAOA,KAAP;AACD;AACF,mBANS,CAAV;AAOAiJ,4BAAUA,QAAQE,IAAR,CAAa,GAAb,CAAV;AACAf,0BAAQpL,SAAR,WAA0BiM,OAA1B;AACD,iBAXD,MAWO;AACLb,0BAAQpL,SAAR,WAA0B2L,gBAAgB3I,KAA1C;AACD;;AAEDZ,2BAAWiJ,YAAX,CAAwBD,OAAxB,EAAiChJ,WAAWkJ,UAAX,CAAsB,CAAtB,CAAjC;;AArBG;AAAA,uBAuBoBc,qBAvBpB;;AAAA;AAuBCP,0BAvBD;AAAA;AAAA,uBAwBuBtL,UAAU,SAAV,EAAqB;AAC7Ce,sBAAI2G;AADyC,iBAArB,CAxBvB;;AAAA;AAwBCoE,6BAxBD;AA2BC/H,uBA3BD,GA2BW,KA3BX;;AAAA,qBA6BC+H,cAAc5L,MA7Bf;AAAA;AAAA;AAAA;;AAAA;AAAA,uBA8BeY,YAAY,SAAZ,EAAuB;AACrCC,sBAAI2G;AADiC,iBAAvB,EAEb;AACD6D,yBAAOD;AADN,iBAFa,CA9Bf;;AAAA;AA8BDvH,uBA9BC;;;AAoCD,oBAAIA,OAAJ,EAAa;AACXqH,kCAAgB3I,KAAhB,GAAwB,EAAxB;AACD;AAtCA;AAAA;;AAAA;AAAA;AAAA,uBAwCeqB,cAAc,SAAd,EAAyB,CAAC;AACxC/C,sBAAI2G,OADoC;AAExC6D,yBAAOD;AAFiC,iBAAD,CAAzB,CAxCf;;AAAA;AAwCDvH,uBAxCC;;;AA6CD,oBAAIA,OAAJ,EAAa;AACXqH,kCAAgB3I,KAAhB,GAAwB,EAAxB;AACD;;AA/CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;;AAAA;AAAA,OArCY;AAwFZyB;AAAA,2EAAW,mBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACLA,EAAEE,MAAF,CAASC,QAAT,IAAqB,IADhB;AAAA;AAAA;AAAA;;AAEHoD,uBAFG,GAEOD,SAAStI,SAASO,IAAT,CAAcgE,YAAd,CAA2B,cAA3B,CAAT,CAFP;;;AAIPS,kBAAEE,MAAF,CAASG,aAAT,CAAuB3E,MAAvB;AAJO;AAAA,uBAKgBgM,qBALhB;;AAAA;AAKHP,0BALG;AAAA;AAAA,uBAOoBxK,YAAY,SAAZ,EAAuB;AAChDC,sBAAI2G;AAD4C,iBAAvB,EAExB;AACD6D,yBAAOD;AADN,iBAFwB,CAPpB;;AAAA;AAOHS,8BAPG;;;AAaP,oBAAIA,cAAJ,EAAoB;AAClBhN,yBAAO,uBAAP,EAAgC,MAAhC;AACA8I,wBAAMrG,GAAN,CAAUkG,OAAV;AACD;;AAhBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAX;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAxFY;AA2GZsE;AAAA,2EAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AACLtE,uBADK,GACKD,SAAStI,SAASO,IAAT,CAAcgE,YAAd,CAA2B,cAA3B,CAAT,CADL;AAAA;AAAA,uBAEa5C,YAAY,SAAZ,EAAuB;AAC3CC,sBAAI2G;AADuC,iBAAvB,EAEnB;AACD6D,yBAAO;AADN,iBAFmB,CAFb;;AAAA;AAELU,yBAFK;;AAOT,oBAAIA,SAAJ,EAAe;AACblN,yBAAO,oBAAP,EAA6B,OAA7B;AACA8C,6BAAWpC,SAAX,GAAuB,EAAvB;AACD;;AAVQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAX;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA3GY,GAAd;;AAyHA2L,kBAAgB5F,gBAAhB,CAAiC,UAAjC,EAA6CqC,MAAMtE,GAAnD;AACA8H,eAAa7F,gBAAb,CAA8B,OAA9B,EAAuCqC,MAAMmE,SAA7C;AACAnK,aAAW2D,gBAAX,CAA4B,OAA5B,EAAqCqC,MAAM3D,OAA3C;;AAEA;AACA,MAAM2H,sBAAsB,SAAtBA,mBAAsB,GAAW;AACrC,QAAIK,mBAAmB,EAAvB;AACA,QAAIC,cAActK,WAAW8C,gBAAX,CAA4B,IAA5B,CAAlB;;AAFqC;AAAA;AAAA;;AAAA;AAIrC,6BAAcwH,WAAd,wIAA2B;AAAA,YAAlBpJ,CAAkB;;AACzBmJ,yBAAiBtB,IAAjB,CAAsB7H,EAAEO,WAAF,CAAcM,IAAd,EAAtB;AACD;AANoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOrC,WAAOsI,gBAAP;AACD,GARD;;AAUA;;;;AAIA;AACA,MAAME,cAAcjN,SAASiB,aAAT,CAAuB,UAAvB,CAApB;AACAgM,cAAY5G,gBAAZ,CAA6B,OAA7B,EAAsC1F,IAAIe,IAA1C;;AAEA;AACA,MAAM8E,kBAAkB,SAAlBA,eAAkB,CAASxB,CAAT,EAAY;AAClC,QAAIA,EAAEE,MAAF,CAASC,QAAT,IAAqB,MAAzB,EAAiC;AAC/BN;AACD;AACF,GAJD;AAKA;AACA,MAAM4B,cAAc,SAAdA,WAAc,CAACzB,CAAD,EAAO;AACzB,QAAIA,EAAE6B,OAAF,IAAa,EAAjB,EAAqB;AACnBhC;AACD;AACF,GAJD;AAKA;AACA,MAAMA,cAAc,SAAdA,WAAc,GAAW;AAC7B7E,aAASiB,aAAT,CAAuB,cAAvB,EAAuCqC,KAAvC,GAA+C,EAA/C;AACAtD,aAASiB,aAAT,CAAuB,eAAvB,EAAwCqC,KAAxC,GAAgD,EAAhD;AACAtD,aAASiB,aAAT,CAAuB,aAAvB,EAAsCqC,KAAtC,GAA8C,EAA9C;AACA,QAAIwD,iBAAiB9G,SAASwF,gBAAT,CAA0B,cAA1B,CAArB;AAJ6B;AAAA;AAAA;;AAAA;AAK7B,6BAAcsB,cAAd,wIAA8B;AAAA,YAArBlD,CAAqB;;AAC5BA,UAAE1D,SAAF,CAAYQ,MAAZ,CAAmB,UAAnB;AACD;AAP4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQ7BV,aAASiB,aAAT,CAAuB,eAAvB,EAAwCb,KAAxC,CAA8CC,OAA9C,GAAwD,MAAxD;AACAL,aAASiB,aAAT,CAAuB,aAAvB,EAAsCb,KAAtC,CAA4CC,OAA5C,GAAsD,MAAtD;AACAL,aAASO,IAAT,CAAcL,SAAd,CAAwBQ,MAAxB,CAA+B,SAA/B;AACD,GAXD;AAYA;AACA,MAAMsD,YAAY,SAAZA,SAAY,CAASkJ,IAAT,EAAe;AAC/B,QAAMC,SAAS,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EAAgE,KAAhE,EAAuE,KAAvE,EAA8E,KAA9E,CAAf;AACA,QAAMC,OAAO,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,KAAvB,EAA8B,MAA9B,EAAsC,KAAtC,EAA6C,KAA7C,CAAb;AACA,QAAIC,OAAOD,KAAKF,KAAKI,MAAL,EAAL,CAAX;AACA,QAAIC,MAAML,KAAK1D,OAAL,EAAV;AACA,QAAIgE,QAAQL,OAAOD,KAAK5D,QAAL,EAAP,CAAZ;AACA,WAAU+D,IAAV,UAAmBE,GAAnB,SAA0BC,KAA1B;AACD,GAPD;AAQA;AACA,MAAM1K,aAAa,SAAbA,UAAa,CAASoK,IAAT,EAAe;AAChC,WAAUA,KAAK7D,WAAL,EAAV,UAAgC6D,KAAK5D,QAAL,GAAgBC,QAAhB,GAA2BxI,MAA3B,IAAqC,CAArC,GAAyC,MAAMmM,KAAK5D,QAAL,EAA/C,GAAiE4D,KAAK5D,QAAL,EAAjG,WAAoH4D,KAAK1D,OAAL,GAAeD,QAAf,GAA0BxI,MAA1B,IAAoC,CAApC,GAAwC,MAAMmM,KAAK1D,OAAL,EAA9C,GAA+D0D,KAAK1D,OAAL,EAAnL;AACD,GAFD;AAGA;AACA,MAAM9C,sBAAsB,SAAtBA,mBAAsB,GAAW;AACrC7B;AACD,GAFD;AAGA;;;;AAIAkF,SAAO0D,QAAP,CAAgBC,SAAhB,CAA0BC,WAA1B,CAAsC,UAASC,OAAT,EAAkB;AACtD1K,YAAQC,GAAR,CAAY,UAAZ,EAAwByK,OAAxB;AACA,QAAIA,WAAW,UAAf,EAA2B;AACzBX,kBAAY1K,KAAZ;AACD,KAFD,MAEO,IAAIqL,WAAW,aAAf,EAA8B;AACnC5L,uBAAiBO,KAAjB;AACD,KAFM,MAEA,IAAIqL,WAAW,WAAf,EAA4B;AACjCzL,qBAAeI,KAAf;AACD;AACF,GATD;AAYD,CAv1BD","file":"application.js","sourcesContent":["/**\r\n* @Author: Pawan Gujral <goofyCoder>\r\n* @Date:   2018-08-08T05:47:42-04:00\r\n* @Email:  goofyCoder.com\r\n* @Last modified by:   codedoodler\r\n* @Last modified time: 2018-08-11T04:29:19-04:00\r\n*/\r\n\r\n//e:g notify(\"PIN is incorrect\", \"error\");\r\nfunction notify(text, type) {\r\n  const notify_Block = document.createElement(\"DIV\");\r\n  notify_Block.classList.add(\"notification\");\r\n  notify_Block.style.display = \"block\";\r\n  notify_Block.innerHTML = `<p class=\"${type}\">${text}</p>`;\r\n  document.body.appendChild(notify_Block);\r\n\r\n  setTimeout(() => {\r\n    notify_Block.remove();\r\n  }, 3000);\r\n}\r\n\r\n\r\n\r\n(function() {\r\n  /*\r\n  * Folder code\r\n  */\r\n  \"use strict\";\r\n\r\n  const app = {\r\n    validate : async () => {\r\n      let isAuth_Data = await __read_DB(\"Auth\");\r\n\r\n      if (isAuth_Data.length) {\r\n        if (isAuth_Data[0].Logged) {\r\n          document.querySelector(\".header-menu\").innerHTML = `<p>\r\n          <span class=\"user-name\">Woof, <em>${isAuth_Data[0].Name}</em></span>\r\n          <img src=\"${JSON.parse(isAuth_Data[0].Avatar)}\" class=\"user-avatar\" alt=\"\" />\r\n          </p>`;\r\n          // ON Load / refresh detch Folder Data\r\n          folder.Render();\r\n        } else {\r\n          window.location = \"index.html\";\r\n        }\r\n      } else {\r\n        window.location = \"index.html\";\r\n      }\r\n    },\r\n    Quit: async () => {\r\n      let isLogged_Out = await __update_DB(\"Auth\", {\r\n        Id: 1\r\n      }, {\r\n        Logged: false\r\n      });\r\n      if (isLogged_Out) {\r\n        window.location = \"index.html\";\r\n      } else {\r\n        notify(\"Something went wrong\", \"error\");\r\n      }\r\n    }\r\n  }\r\n\r\n  app.validate();\r\n\r\n  /*\r\n  * Folder code\r\n  */\r\n\r\n  const folder_block = document.querySelector(\"#folder_block\");\r\n  const folder_Block_List = folder_block.querySelector(\".folder_block_articles\");\r\n  const folder_Modal_Btn = folder_block.querySelector(\".show_folder_modal\");\r\n  const folder_Submit_Btn = document.querySelector(\"#btn_add_folder\");\r\n  const group_label = document.querySelector(\".label-group\");\r\n  const task_Modal_Btn = document.querySelector(\".show_task_modal\");\r\n\r\n  const folder = {\r\n    Render: async () => {\r\n      let folders_Data = await __read_DB(\"Product\", {\"Type\" : \"Folder\"});\r\n      if (folders_Data.length) {\r\n        let isFolder_Rendered = await folder.Set(folders_Data);\r\n        folder_block.querySelector(\".help-message\").style.display = \"none\";\r\n        if (isFolder_Rendered) {\r\n          folder_Block_List.querySelector('P').click();\r\n        }\r\n      } else {\r\n        folder_Block_List.innerHTML = \"\";\r\n        task_List.innerHTML = \"\";\r\n        todo_List.innerHTML = \"\";\r\n        notes_List.innerHTML = \"\";\r\n        todo_Block.style.display = \"none\";\r\n        notes_Block.style.display = \"none\";\r\n        folder_block.querySelector(\".help-message\").style.display = \"block\";\r\n        folder_Modal_Btn.click();\r\n      }\r\n\r\n      let today_Date = parseToday(new Date());\r\n      document.body.setAttribute(\"data-today\", today_Date);\r\n\r\n    },\r\n    Set : async (data) => {\r\n      console.log(data);\r\n      folder_Block_List.innerHTML = \"\";\r\n      let filtered_Data = data.filter((value, index, arr) => {\r\n        if (value.Type == \"Folder\")\r\n        return value;\r\n      });\r\n      let parsedDate;\r\n      for (let [index, a] of filtered_Data.entries()) {\r\n        let isListExist = document.querySelector(`[data-group-name=\"${a.Group}\"]`);\r\n        if (isListExist != null) {\r\n          let list = document.createElement(\"ol\");\r\n          parsedDate = await parseDate(a.Date);\r\n          isListExist.querySelector('ol').innerHTML += `<li data-id=\"${a.Id}\" data-group=\"${a.Group}\" data-folder=\"${a.Folder}\" data-type=\"folder\"><p>${a.Folder}</p>\r\n          <span class=\"edit_Folder\"></span>\r\n          <span class=\"delete_Task\"></span>\r\n          <small>${parsedDate}</small></li>`;\r\n        } else {\r\n          let folder = document.createElement(\"article\");\r\n          let title = document.createElement(\"h4\");\r\n          let list = document.createElement(\"ol\");\r\n          folder.setAttribute(\"data-group-name\", a.Group);\r\n          title.textContent = a.Group;\r\n          parsedDate = await parseDate(a.Date);\r\n          list.innerHTML += `<li data-id=\"${a.Id}\" data-group=\"${a.Group}\" data-folder=\"${a.Folder}\" data-type=\"folder\" data-text=\"${a.Folder}\">\r\n          <p>${a.Folder} </p>\r\n          <span class=\"edit_Folder\"></span>\r\n          <span class=\"delete_Task\"></span>\r\n          <small>${parsedDate}</small></li>`;\r\n          folder.appendChild(title);\r\n          folder.appendChild(list);\r\n          folder_Block_List.appendChild(folder);\r\n        }\r\n      }\r\n      return true;\r\n    },\r\n    Add : async () => {\r\n      let group_Input = document.querySelector(\"#group_Input\");\r\n      let folder_Input = document.querySelector(\"#folder_Input\");\r\n\r\n      if (group_Input.value != \"\" && folder_Input.value != \"\") {\r\n        if (folder_Submit_Btn.getAttribute(\"data-type\") == \"create\") {\r\n          let isFolder_Exists = await __read_DB(\"Product\", {\r\n            \"Group\": group_Input.value.toLowerCase().trim(),\r\n            \"Folder\": folder_Input.value.toLowerCase().trim()\r\n          });\r\n          if (isFolder_Exists.length == 0) {\r\n            // Add to DB\r\n            let isAdded = await __add_Item_DB(\"Product\", [{\r\n              \"Group\": group_Input.value.toLowerCase().trim(),\r\n              \"Folder\": folder_Input.value.toLowerCase().trim(),\r\n              \"Type\": \"Folder\",\r\n              \"Date\": new Date()\r\n            }]);\r\n\r\n            if (isAdded) {\r\n              clear_Modal();\r\n              folder.Render();\r\n            }\r\n          } else {\r\n            notify(\"Folder already exists\", \"error\");\r\n          }\r\n        } else if (folder_Submit_Btn.getAttribute(\"data-type\") == \"update\") {\r\n          let isUpdated = await __update_DB(\"Product\", {\r\n            \"Group\": folder_Submit_Btn.getAttribute(\"data-group\"),\r\n            \"Folder\": folder_Submit_Btn.getAttribute(\"data-folder\")\r\n          }, {\r\n            \"Group\": group_Input.value.toLowerCase().trim(),\r\n            \"Folder\": folder_Input.value.toLowerCase().trim()\r\n          });\r\n\r\n          console.log(isUpdated);\r\n\r\n          if (isUpdated) {\r\n            clear_Modal();\r\n            folder.Render();\r\n          }\r\n        }\r\n      } else {\r\n        notify(\"Fields can't be empty\", \"error\");\r\n      }\r\n    },\r\n    Clicked : (e) => {\r\n      let $this = e.target;\r\n      if ($this.nodeName == \"P\" || $this.nodeName == \"SMALL\") {\r\n        let data_Group = $this.parentElement.getAttribute(\"data-group\");\r\n        let data_Folder = $this.parentElement.getAttribute(\"data-folder\");\r\n        // Set attribute to body element\r\n        document.body.setAttribute(\"data-group\", data_Group);\r\n        document.body.setAttribute(\"data-folder\", data_Folder);\r\n\r\n        let all_Folder_Items = folder_block.querySelectorAll(\"li\");\r\n\r\n        for (let a of all_Folder_Items) {\r\n          a.classList.remove(\"active\");\r\n        }\r\n        $this.parentElement.classList.add(\"active\");\r\n\r\n        task_Modal_Btn.style.display = \"block\";\r\n\r\n        task.Render(data_Group, data_Folder);\r\n      } else if ($this.className == \"delete_Task\") {\r\n        let data_Group = $this.parentElement.getAttribute(\"data-group\");\r\n        let data_Folder = $this.parentElement.getAttribute(\"data-folder\");\r\n        let data_Name = $this.parentElement.children[0].textContent;\r\n        folder.Remove(data_Name, data_Group, data_Folder);\r\n      } else if ($this.className == \"edit_Folder\") {\r\n        let $this_value = $this.parentElement.getAttribute(\"data-text\");\r\n        folder_Modal_Btn.click();\r\n        document.querySelector(\"#folder_Input\").value = $this_value;\r\n        document.querySelector(\"#group_Input\").value = $this.parentElement.getAttribute(\"data-group\");\r\n        folder_Submit_Btn.textContent = \"Update Folder\";\r\n        folder_Submit_Btn.setAttribute(\"data-type\", \"update\");\r\n        folder_Submit_Btn.setAttribute(\"data-id\", $this.parentElement.getAttribute(\"data-id\"));\r\n        folder_Submit_Btn.setAttribute(\"data-group\", $this.parentElement.getAttribute(\"data-group\"));\r\n        folder_Submit_Btn.setAttribute(\"data-folder\", $this.parentElement.getAttribute(\"data-folder\"));\r\n        group_label.querySelector(`[data-label=${$this.parentElement.getAttribute(\"data-group\")}]`).classList.add(\"selected\");\r\n      }\r\n    },\r\n    Remove: async (text, groupName, folderName) => {\r\n      let conf = confirm(`Do you really want to delete ${text}?`);\r\n      if (conf) {\r\n        let isRemove_Done = await __remove_Item_DB(\"Product\", {\r\n          \"Group\": groupName,\r\n          \"Folder\": folderName\r\n        });\r\n        if (isRemove_Done) {\r\n         folder.Render();\r\n          notify(\"Successfully Deleled\", \"info\");\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  folder_Submit_Btn.addEventListener(\"click\", folder.Add);\r\n  folder_Block_List.addEventListener(\"click\", folder.Clicked);\r\n  folder_Modal_Btn.addEventListener(\"click\", folder_Modal_Trigger);\r\n  group_label.addEventListener(\"click\", toggle_label_Input);\r\n  // Show folder Modal\r\n  function folder_Modal_Trigger() {\r\n    document.body.classList.add(\"overlay\");\r\n    document.body.addEventListener(\"click\", overlay_clicked);\r\n    document.body.addEventListener(\"keyup\", esc_trigger);\r\n    document.querySelector(\".folder_Modal\").style.display = \"block\";\r\n    document.querySelector(\".folder_Modal .btn-close\").addEventListener(\"click\", close_Modal_Trigger);\r\n    document.querySelector(\"#folder_Input\").focus();\r\n    // document.querySelector(\"#group_Input\").addEventListener(\"keypress\", submit_Folder_Form_OnEnter);\r\n  }\r\n  // On Enter Trigger\r\n  const submit_Folder_Form_OnEnter = (e) => {\r\n    if (e.keyCode == 13) {\r\n      folder_Submit_Btn.click();\r\n    }\r\n  }\r\n  // Fetch group label\r\n  function toggle_label_Input(e) {\r\n    if (e.target.nodeName == \"SPAN\") {\r\n      if (e.target.textContent != \"Other\") {\r\n        document.querySelector(\"#group_Input\").setAttribute(\"type\", \"hidden\");\r\n        document.querySelector(\"#group_Input\").value = e.target.textContent;\r\n      } else {\r\n        document.querySelector(\"#group_Input\").value = \"\";\r\n        document.querySelector(\"#group_Input\").setAttribute(\"type\", \"text\");\r\n      }\r\n\r\n      let all_Label_Span = document.querySelectorAll(\".label-Value\");\r\n      for (let a of all_Label_Span) {\r\n        a.classList.remove(\"selected\");\r\n      }\r\n      e.target.classList.add(\"selected\");\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n  * Task Code\r\n  */\r\n  const Task_block = document.querySelector(\"#task_block\");\r\n  const task_List = Task_block.querySelector(\"#task_list\");\r\n  const task_Submit_Btn = document.querySelector(\"#btn_add_task\");\r\n  const todo_Block = document.querySelector(\".todo_Block_Todo_List\");\r\n  const notes_Block = document.querySelector('.notes_Block_Content');\r\n\r\n  const task = {\r\n    Render: async (group, folder) => {\r\n      let tasks_Data = await __read_DB(\"Product\", {\r\n        \"Group\": group,\r\n        \"Folder\": folder\r\n      });\r\n\r\n      if (tasks_Data.length > 1) {\r\n        const filtered_Data = tasks_Data.filter((value, index, arr) => {\r\n          if (value.Task != undefined) {\r\n            return value;\r\n          }\r\n        });\r\n        let isTask_Rendered = await task.Set(filtered_Data);\r\n        task_List.querySelector('P').click();\r\n      } else {\r\n        task_List.innerHTML = \"\";\r\n        todo_List.innerHTML = \"\";\r\n        notes_List.innerHTML = \"\";\r\n        todo_Block.style.display = \"none\";\r\n        notes_Block.style.display = \"none\";\r\n        task_block.querySelector(\".help-message\").style.display = \"block\";\r\n      }\r\n    },\r\n    Set: async (data) => {\r\n      task_block.querySelector(\".help-message\").style.display = \"none\";\r\n      const list = Task_block.querySelector(\"ol\");\r\n      list.innerHTML = '';\r\n      let today = document.body.getAttribute(\"data-today\");\r\n      for (let a of data) {\r\n        let timeLine = await timeScheduler(today, a.Timeline.startDate, a.Timeline.endDate);\r\n\r\n        list.innerHTML += `<li data-id=\"${a.Id}\" class=\"${today == a.Timeline.endDate ? \"attention\" : \"normal\"} ${a.Type}\" data-status=\"${a.Type}\"  data-group=\"${a.Group}\" data-folder=\"${a.Folder}\" data-type=\"task\" data-startDate=\"${a.Timeline.startDate}\"  data-endDate=\"${a.Timeline.endDate}\" data-text=\"${a.Task}\" data-repeat=\"${a.Timeline.Repeat}\">\r\n        <p>${a.Task}</p>\r\n        <span class=\"edit_Task\"></span>\r\n        <span class=\"delete_Task\"></span>\r\n        <small><em>${timeLine}</em></small>\r\n        </li>`;\r\n      }\r\n      return true;\r\n    },\r\n    Add: async () => {\r\n      const task_Folder = document.body.getAttribute(\"data-folder\");\r\n      const task_Group = document.body.getAttribute(\"data-group\");\r\n      const task_Input = document.querySelector(\"#task_Input\");\r\n\r\n      const startDate_Input = document.querySelector(\"#startDate_Input\"); // YYYY-MM-DD\r\n      const endDate_Input = document.querySelector(\"#endDate_Input\"); // YYYY-MM-DD\r\n\r\n      if (task_Input.value != \"\") {\r\n        if (task_Submit_Btn.getAttribute(\"data-type\") == \"create\") {\r\n          let isExist = await __read_DB(\"Product\", {\r\n            \"Group\": task_Group.toLowerCase().trim(),\r\n            \"Folder\": task_Folder.toLowerCase().trim(),\r\n            \"Task\": task_Input.value.toLowerCase().trim()\r\n          });\r\n\r\n          if (isExist.length == 0) {\r\n            let isAdded = __add_Item_DB(\"Product\", [{\r\n              \"Group\": task_Group.toLowerCase().trim(),\r\n              \"Folder\": task_Folder.toLowerCase().trim(),\r\n              \"Task\": task_Input.value.toLowerCase().trim(),\r\n              \"Date\": new Date(),\r\n              \"Type\" : \"Pending\",\r\n              \"Timeline\": {\r\n                \"startDate\": startDate_Input.value,\r\n                \"endDate\": endDate_Input.value,\r\n                \"Repeat\": false\r\n              }\r\n            }]);\r\n\r\n            if (isAdded) {\r\n              clear_Modal();\r\n              task.Render(task_Group, task_Folder);\r\n            }\r\n          } else {\r\n            notify(\"Task already exit\", \"error\");\r\n          }\r\n        } else if (task_Submit_Btn.getAttribute(\"data-type\") == \"update\") {\r\n          let task_Completed_Checkbox = document.querySelector(\"#type_Input\").checked;\r\n          let isUpdated = __update_DB(\"Product\", {\r\n            Id: parseInt(task_Submit_Btn.getAttribute(\"data-id\"))\r\n          }, {\r\n            \"Task\": task_Input.value.toLowerCase().trim(),\r\n            \"Type\" : task_Completed_Checkbox ? \"Completed\" : \"Pending\",\r\n            \"Timeline\": {\r\n              \"startDate\": task_Completed_Checkbox ? \"\" : startDate_Input.value,\r\n              \"endDate\": task_Completed_Checkbox ? \"\" : endDate_Input.value\r\n            }\r\n          });\r\n          if (isUpdated) {\r\n            clear_Modal();\r\n            task.Render(task_Group, task_Folder);\r\n          }\r\n        }\r\n      } else {\r\n        notify(\"Enter Task name\", \"error\");\r\n      }\r\n    },\r\n    Clicked: (e) => {\r\n      let $this = e.target;\r\n      if ($this.nodeName == \"P\") {\r\n        let task_Id = $this.parentElement.getAttribute(\"data-id\");\r\n        let task_Items = task_block.querySelectorAll(\"li\");\r\n\r\n        for (let a of task_Items) {\r\n          a.classList.remove(\"active\");\r\n        }\r\n\r\n        $this.parentElement.classList.add(\"active\");\r\n        document.body.setAttribute(\"data-task-id\", task_Id);\r\n        todo_Block.style.display = \"block\";\r\n        notes_Block.style.display = \"block\";\r\n        todo.Set(parseInt(task_Id));\r\n        notes.Set(parseInt(task_Id));\r\n\r\n      } else if (e.target.className == \"delete_Task\") {\r\n        task.Remove(\r\n          $this.parentElement.getAttribute(\"data-group\"),\r\n          $this.parentElement.getAttribute(\"data-folder\"),\r\n          $this.parentElement.getAttribute(\"data-id\"),\r\n          $this.parentElement.children[0].textContent\r\n        );\r\n      } else if (e.target.className == \"edit_Task\") {\r\n        let $this_value_txt = $this.parentElement.getAttribute(\"data-text\");\r\n        let $this_value_start = $this.parentElement.getAttribute(\"data-startdate\");\r\n        let $this_value_end = $this.parentElement.getAttribute(\"data-enddate\");\r\n        let $this_Status = $this.parentElement.getAttribute(\"data-status\");\r\n\r\n        task_Modal_Btn.click();\r\n        document.querySelector(\"#task_Input\").value = $this_value_txt;\r\n        document.querySelector(\"#startDate_Input\").value = $this_value_start;\r\n        document.querySelector(\"#endDate_Input\").value = $this_value_end;\r\n        task_Submit_Btn.textContent = \"Update Task\";\r\n        task_Submit_Btn.setAttribute(\"data-type\", \"update\");\r\n        task_Submit_Btn.setAttribute(\"data-id\", $this.parentElement.getAttribute(\"data-id\"));\r\n        document.querySelector(\"#startDate_Input\").addEventListener(\"change\", (e) => {\r\n          document.querySelector(\"#endDate_Input\").setAttribute('min', e.target.value);\r\n        });\r\n\r\n        if($this_Status == \"Completed\") {\r\n          document.querySelector(\"#type_Input\").checked = true;\r\n        }else {\r\n          document.querySelector(\"#type_Input\").checked = false;\r\n        }\r\n        document.querySelector(\".task_Modal .checkbox-group\").style.display = \"flex\";\r\n      }\r\n    },\r\n    Remove: async (group, folder, id, name) => {\r\n      let conf = confirm(`Do you really want to delete ${name}?`);\r\n\r\n      if (conf) {\r\n        let isDeleted = await __remove_Item_DB(\"Product\", {\r\n          Id: parseInt(id)\r\n        });\r\n\r\n        if (isDeleted) {\r\n          task.Render(group, folder);\r\n          todo.Set(parseInt(document.body.getAttribute(\"data-task-Id\")));\r\n          notes.Set(parseInt(document.body.getAttribute(\"data-task-Id\")));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  task_Modal_Btn.addEventListener(\"click\", task_Modal_Trigger);\r\n  task_Submit_Btn.addEventListener(\"click\", task.Add);\r\n  task_List.addEventListener(\"click\", task.Clicked);\r\n\r\n  // Show Task Modal\r\n  function task_Modal_Trigger() {\r\n    document.body.classList.add(\"overlay\");\r\n    document.body.addEventListener(\"click\", overlay_clicked);\r\n    document.body.addEventListener(\"keyup\", esc_trigger);\r\n    document.querySelector(\".task_Modal\").style.display = \"block\";\r\n    document.querySelector(\".task_Modal .btn-close\").addEventListener(\"click\", close_Modal_Trigger);\r\n    document.querySelector(\"#task_Input\").focus();\r\n    document.querySelector(\"#task_Input\").addEventListener(\"keypress\", submit_Task_Form_OnEnter);\r\n\r\n    let currentDate = new Date();\r\n    currentDate = `${currentDate.getFullYear()}-${currentDate.getMonth().toString().length == 1 ? \"0\" + currentDate.getMonth() : currentDate.getMonth()}-${currentDate.getDate().toString().length == 1 ? \"0\" + currentDate.getDate() : currentDate.getDate()}`;\r\n    document.querySelector(\"#startDate_Input\").setAttribute('min', currentDate);\r\n    document.querySelector(\"#endDate_Input\").setAttribute('min', currentDate);\r\n    document.querySelector(\"#startDate_Input\").value = currentDate;\r\n    document.querySelector(\"#startDate_Input\").addEventListener(\"change\", (e) => {\r\n      document.querySelector(\"#endDate_Input\").setAttribute('min', e.target.value);\r\n    });\r\n  }\r\n  // Submit Task from enter keyboard\r\n  const submit_Task_Form_OnEnter = (e) => {\r\n    if (e.keyCode == 13) {\r\n      task_Submit_Btn.click();\r\n    }\r\n  }\r\n  // Timeline Schedule\r\n  function timeScheduler(today, start, end) {\r\n    // YYYY-MM-DD\r\n    // console.log(today, start, end);\r\n    let today_Arr = today.split(\"-\");\r\n    let start_Arr = start.split(\"-\");\r\n    let end_Arr = end.split(\"-\");\r\n    if(start != \"\" && end != \"\" && today != \"\") {\r\n      if(end == today) {\r\n        chrome.runtime.sendMessage({type: \"badge\"});\r\n        return \"Task Ending Today\";\r\n      }\r\n      else if(end > today) {\r\n        if(start == today) {\r\n          return \"Starting Today\";\r\n        }\r\n        else if(end_Arr[1] != today_Arr[1]) {\r\n          return \"Starting coming month\"\r\n        } else {\r\n          return `Ending in ${end_Arr[2] - today_Arr[2]} days`;\r\n        }\r\n      }\r\n      else if (end < today) {\r\n        if(end_Arr[1] != today_Arr[1]) {\r\n          return \"Pending over a month\"\r\n        } else {\r\n          return `Pending since ${today_Arr[2] - end_Arr[2]} days`;\r\n        }\r\n      }\r\n    } else {\r\n      return \"Time not scheduled\";\r\n    }\r\n  }\r\n\r\n  /*\r\n  * Todo List\r\n  */\r\n\r\n  const todo_Input = todo_Block.querySelector(\"#todo_Item_Add_Input\");\r\n  const todo_List = todo_Block.querySelector(\"#todo_List\");\r\n  const todo_Clear_Btn = document.querySelector('.remove_Completed_Todo');\r\n\r\n  const todo = {\r\n    Set: async (id) => {\r\n      todo_List.innerHTML = \"\";\r\n      document.querySelector(\".todo_stats_ongoing\").textContent = 0;\r\n      document.querySelector(\".todo_stats_complete\").textContent = 0;\r\n\r\n      let todo_Data = await __read_DB(\"Product\", {\r\n        Id: id\r\n      });\r\n      if (todo_Data.length) {\r\n        if (todo_Data[0].Todo != undefined) {\r\n          let todo_Data_Parsed = todo_Data[0].Todo;\r\n          if (todo_Data_Parsed.length) {\r\n            todo_Block.querySelector(\".help-message\").style.display = \"none\";\r\n            todo_List.innerHTML = \"\";\r\n            let ongoing_Tasks = 0;\r\n            let completed_Task = 0;\r\n            for (let a of todo_Data_Parsed) {\r\n              todo_List.innerHTML += `<li data-id=\"${a.Id}\" class=\"${a.Status}\"><span></span><p>${a.Data}</p><em></em></li>`;\r\n              if (a.Status == \"ongoing\") {\r\n                ongoing_Tasks++;\r\n                document.querySelector(\".todo_stats_ongoing\").textContent = ongoing_Tasks;\r\n              } else {\r\n                completed_Task++\r\n                document.querySelector(\".todo_stats_complete\").textContent = completed_Task;\r\n              }\r\n            }\r\n          } else {\r\n            todo_Block.querySelector(\".help-message\").style.display = \"block\";\r\n          }\r\n        } else {\r\n          todo_Block.querySelector(\".help-message\").style.display = \"block\";\r\n        }\r\n      }\r\n    },\r\n    Add: async () => {\r\n      let todo_Items = todo_List.querySelectorAll(\"li\");\r\n      let todo_Items_Data = await collect_Todo_Items(todo_Items);\r\n      let isAdded = await __update_DB(\"Product\", {\r\n        Id: parseInt(document.body.getAttribute(\"data-task-id\"))\r\n      }, {\r\n        \"Todo\": todo_Items_Data\r\n      });\r\n\r\n      if (isAdded) {\r\n        todo_Input.value = \"\";\r\n        if (todo_List.querySelectorAll(\"li\").length) {\r\n          todo_Block.querySelector(\".help-message\").style.display = \"none\";\r\n        } else {\r\n          todo_Block.querySelector(\".help-message\").style.display = \"block\";\r\n        }\r\n      }\r\n    },\r\n    Clicked: (e) => {\r\n      if (e.target.nodeName == \"SPAN\") {\r\n        let elem_Parent = e.target.parentElement;\r\n        if (elem_Parent.className == \"ongoing\") {\r\n          elem_Parent.classList.remove(\"ongoing\");\r\n          elem_Parent.classList.add(\"complete\");\r\n          let current_ongoing_count = document.querySelector(\".todo_stats_ongoing\").textContent;\r\n          let current_complete_count = document.querySelector(\".todo_stats_complete\").textContent;\r\n\r\n          document.querySelector(\".todo_stats_ongoing\").textContent = parseInt(current_ongoing_count) - 1;\r\n          document.querySelector(\".todo_stats_complete\").textContent = parseInt(current_complete_count) + 1;\r\n        } else {\r\n          elem_Parent.classList.add(\"ongoing\");\r\n          elem_Parent.classList.remove(\"complete\");\r\n\r\n          let current_ongoing_count = document.querySelector(\".todo_stats_ongoing\").textContent;\r\n          let current_complete_count = document.querySelector(\".todo_stats_complete\").textContent;\r\n\r\n          document.querySelector(\".todo_stats_ongoing\").textContent = parseInt(current_ongoing_count) + 1;\r\n          document.querySelector(\".todo_stats_complete\").textContent = parseInt(current_complete_count) - 1;\r\n        }\r\n        todo.Add();\r\n      } else if (e.target.nodeName == \"EM\") {\r\n        if (e.target.parentElement.className == \"ongoing\") {\r\n          let current_ongoing_count = document.querySelector(\".todo_stats_ongoing\").textContent;\r\n          document.querySelector(\".todo_stats_ongoing\").textContent = parseInt(current_ongoing_count) - 1;\r\n        } else {\r\n          let current_complete_count = document.querySelector(\".todo_stats_complete\").textContent;\r\n          document.querySelector(\".todo_stats_complete\").textContent = parseInt(current_complete_count) - 1;\r\n        }\r\n        e.target.parentElement.remove();\r\n        notify(\"Successfully deleted.\", \"info\");\r\n\r\n        todo.Add();\r\n      }\r\n    },\r\n    RemoveCompletedTodo: () => {\r\n      todo_Clear_Promise()\r\n      .then((response) => {\r\n        notify(response, \"success\");\r\n        todo.Add();\r\n      })\r\n      .catch((error) => {\r\n        notify(error, \"error\");\r\n      });\r\n    }\r\n  }\r\n\r\n  todo_List.addEventListener(\"click\", todo.Clicked);\r\n  todo_Clear_Btn.addEventListener(\"click\", todo.RemoveCompletedTodo);\r\n  todo_Input.addEventListener(\"keypress\", todo_Input_Submit);\r\n  // Collect todo items\r\n  const collect_Todo_Items = function(items) {\r\n    let todo_Items = [];\r\n    for (let [index, a] of items.entries()) {\r\n      todo_Items.push({\r\n        \"Id\": index,\r\n        \"Status\": a.className,\r\n        \"Data\": a.textContent\r\n      });\r\n    }\r\n    return todo_Items;\r\n  }\r\n  // Submit todo Item\r\n  function todo_Input_Submit(e) {\r\n    if (e.keyCode == 13 && this.value != '') {\r\n      let li_Node = document.createElement(\"LI\");\r\n      li_Node.classList.add(\"ongoing\");\r\n      li_Node.innerHTML = `<span></span><p>${this.value}</p><em></em>`;\r\n      todo_List.insertBefore(li_Node, todo_List.childNodes[0]);\r\n      let current_ongoing_count = document.querySelector(\".todo_stats_ongoing\").textContent;\r\n      document.querySelector(\".todo_stats_ongoing\").textContent = parseInt(current_ongoing_count) + 1;\r\n      todo.Add();\r\n    }\r\n  }\r\n  // todo list promise\r\n  const todo_Clear_Promise = function() {\r\n    return new Promise((resolve, reject) => {\r\n      let todo_Items = todo_List.querySelectorAll(\"li\");\r\n      let completed_Count = 0;\r\n      for (let a of todo_Items) {\r\n        if (a.className == \"complete\") {\r\n          a.remove();\r\n          completed_Count++;\r\n        }\r\n      }\r\n      if (completed_Count) {\r\n        resolve(\"All completed task(s) deleted\");\r\n        document.querySelector(\".todo_stats_complete\").textContent = 0;\r\n\r\n      } else {\r\n        reject(\"No completed task(s) found.\");\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  /*\r\n  * Notes\r\n  */\r\n\r\n  const notes_Add_Input = notes_Block.querySelector(\"#notes_Add_Input\");\r\n  const notes_List = notes_Block.querySelector(\"#notes_List\");\r\n  const notes_Remove = notes_Block.querySelector(\".remove_Notes\");\r\n\r\n  const notes = {\r\n    Set: async (id) => {\r\n      let notes_Data = await __read_DB(\"Product\", {\r\n        Id: id\r\n      });\r\n      notes_List.innerHTML = '';\r\n      if (notes_Data.length) {\r\n        if (notes_Data[0].Notes != undefined) {\r\n          let notes_Data_Parsed = notes_Data[0].Notes\r\n          if (notes_Data_Parsed.length) {\r\n            notes_Block.querySelector(\".help-message\").style.display = \"none\";\r\n\r\n            for (let a of notes_Data_Parsed) {\r\n              if (a.search(\"@\") != -1) {\r\n                let txt_arr = a.split(\" \");\r\n                txt_arr = txt_arr.map((value, index) => {\r\n                  if (value.search(\"@\") != -1) {\r\n                    return `<span>${value}</span>`;\r\n                  } else {\r\n                    return value;\r\n                  }\r\n                });\r\n                txt_arr = txt_arr.join(\" \");\r\n                notes_List.innerHTML += `<li><p>${txt_arr}</p><em></em></li>`;\r\n              } else {\r\n                notes_List.innerHTML += `<li><p>${a}</p><em></em></li>`;\r\n              }\r\n\r\n            }\r\n          } else {\r\n            notes_Block.querySelector(\".help-message\").style.display = \"block\";\r\n          }\r\n        } else {\r\n          notes_Block.querySelector(\".help-message\").style.display = \"block\";\r\n        }\r\n      }\r\n    },\r\n    Add:   async (e) => {\r\n      if (e.keyCode == 13 && notes_Add_Input.value != '') {\r\n        let task_Id = parseInt(document.body.getAttribute(\"data-task-id\"));\r\n        notes_Block.querySelector(\".help-message\").style.display = \"none\";\r\n\r\n        let li_Node = document.createElement(\"LI\");\r\n        if (notes_Add_Input.value.search(\"@\") != -1) {\r\n          let txt_arr = notes_Add_Input.value.split(\" \");\r\n          txt_arr = txt_arr.map((value, index) => {\r\n            if (value.search(\"@\") != -1) {\r\n              return `<span>${value}</span>`;\r\n            } else {\r\n              return value;\r\n            }\r\n          });\r\n          txt_arr = txt_arr.join(\" \");\r\n          li_Node.innerHTML = `<p>${txt_arr}</p><em></em>`;\r\n        } else {\r\n          li_Node.innerHTML = `<p>${notes_Add_Input.value}</p><em></em>`;\r\n        }\r\n\r\n        notes_List.insertBefore(li_Node, notes_List.childNodes[0]);\r\n\r\n        let notes_Data = await collect_Notes_Items();\r\n        let isNote_Exists = await __read_DB(\"Product\", {\r\n          Id: task_Id\r\n        });\r\n        let isAdded = false;\r\n\r\n        if (isNote_Exists.length) {\r\n          isAdded = await __update_DB(\"Product\", {\r\n            Id: task_Id\r\n          }, {\r\n            Notes: notes_Data\r\n          });\r\n\r\n          if (isAdded) {\r\n            notes_Add_Input.value = \"\";\r\n          }\r\n        } else {\r\n          isAdded = await __add_Item_DB(\"Product\", [{\r\n            Id: task_Id,\r\n            Notes: notes_Data\r\n          }]);\r\n\r\n          if (isAdded) {\r\n            notes_Add_Input.value = \"\";\r\n          }\r\n        }\r\n      }\r\n    },\r\n    Clicked:   async (e) => {\r\n      if (e.target.nodeName == \"EM\") {\r\n        let task_Id = parseInt(document.body.getAttribute(\"data-task-id\"));\r\n\r\n        e.target.parentElement.remove();\r\n        let notes_Data = await collect_Notes_Items();\r\n\r\n        let isNote_Updated = await __update_DB(\"Product\", {\r\n          Id: task_Id\r\n        }, {\r\n          Notes: notes_Data\r\n        });\r\n\r\n        if (isNote_Updated) {\r\n          notify(\"Successfully deleted.\", \"info\");\r\n          notes.Set(task_Id);\r\n        }\r\n      }\r\n    },\r\n    RemoveAll: async () => {\r\n      let task_Id = parseInt(document.body.getAttribute(\"data-task-id\"));\r\n      let isRemoved = await __update_DB(\"Product\", {\r\n        Id: task_Id\r\n      }, {\r\n        Notes: []\r\n      })\r\n      if (isRemoved) {\r\n        notify(\"All notes deleted.\", \"error\");\r\n        notes_List.innerHTML = \"\";\r\n      }\r\n    }\r\n  }\r\n\r\n  notes_Add_Input.addEventListener(\"keypress\", notes.Add);\r\n  notes_Remove.addEventListener(\"click\", notes.RemoveAll);\r\n  notes_List.addEventListener(\"click\", notes.Clicked);\r\n\r\n  // Collect Notes list\r\n  const collect_Notes_Items = function() {\r\n    let notes_Items_Data = [];\r\n    let notes_Items = notes_List.querySelectorAll(\"li\");\r\n\r\n    for (let a of notes_Items) {\r\n      notes_Items_Data.push(a.textContent.trim());\r\n    }\r\n    return notes_Items_Data;\r\n  }\r\n\r\n  /*\r\n  * Log out\r\n  */\r\n\r\n  // Log out\r\n  const log_Out_Btn = document.querySelector(\"#log_Out\");\r\n  log_Out_Btn.addEventListener(\"click\", app.Quit);\r\n\r\n  // overlay trigger\r\n  const overlay_clicked = function(e) {\r\n    if (e.target.nodeName == \"BODY\") {\r\n      clear_Modal();\r\n    }\r\n  }\r\n  // ESC Trigger\r\n  const esc_trigger = (e) => {\r\n    if (e.keyCode == 27) {\r\n      clear_Modal();\r\n    }\r\n  }\r\n  // clearModal\r\n  const clear_Modal = function() {\r\n    document.querySelector(\"#group_Input\").value = \"\";\r\n    document.querySelector(\"#folder_Input\").value = \"\";\r\n    document.querySelector(\"#task_Input\").value = \"\";\r\n    let all_Label_Span = document.querySelectorAll(\".label-Value\");\r\n    for (let a of all_Label_Span) {\r\n      a.classList.remove(\"selected\");\r\n    }\r\n    document.querySelector(\".folder_Modal\").style.display = \"none\";\r\n    document.querySelector(\".task_Modal\").style.display = \"none\";\r\n    document.body.classList.remove(\"overlay\");\r\n  }\r\n  // Date Parsers\r\n  const parseDate = function(date) {\r\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n    const days = [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thru\", \"Fri\", \"Sat\"]\r\n    let week = days[date.getDay()];\r\n    let day = date.getDate();\r\n    let month = months[date.getMonth()];\r\n    return `${week}, ${day} ${month}`;\r\n  }\r\n  // parse Today\r\n  const parseToday = function(date) {\r\n    return `${date.getFullYear()}-${date.getMonth().toString().length == 1 ? \"0\" + date.getMonth() : date.getMonth()}-${date.getDate().toString().length == 1 ? \"0\" + date.getDate() : date.getDate()}`;\r\n  }\r\n  // close modal\r\n  const close_Modal_Trigger = function() {\r\n    clear_Modal();\r\n  }\r\n  /*\r\n  * Background Message Passing\r\n  */\r\n\r\n  chrome.commands.onCommand.addListener(function(command) {\r\n    console.log('Command:', command);\r\n    if (command == \"quit-dog\") {\r\n      log_Out_Btn.click();\r\n    } else if (command == \"open-folder\") {\r\n      folder_Modal_Btn.click();\r\n    } else if (command == \"open-task\") {\r\n      task_Modal_Btn.click();\r\n    }\r\n  });\r\n\r\n\r\n})();\r\n"]}